"use strict";(self.webpackChunkbeta_BNB_Docs=self.webpackChunkbeta_BNB_Docs||[]).push([[276],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return u}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=l(t),u=r,k=m["".concat(c,".").concat(u)]||m[u]||d[u]||s;return t?a.createElement(k,o(o({ref:n},p),{},{components:t})):a.createElement(k,o({ref:n},p))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var l=2;l<s;l++)o[l]=t[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},61819:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return m}});var a=t(87462),r=t(63366),s=(t(67294),t(3905)),o=["components"],i={},c="WebSocket Streams",l={unversionedId:"beaconchain/develop/api-reference/dex-api/ws-streams",id:"beaconchain/develop/api-reference/dex-api/ws-streams",isDocsHomePage:!1,title:"WebSocket Streams",description:"1. Orders",source:"@site/docs/beaconchain/develop/api-reference/dex-api/ws-streams.md",sourceDirName:"beaconchain/develop/api-reference/dex-api",slug:"/beaconchain/develop/api-reference/dex-api/ws-streams",permalink:"/docs/beaconchain/develop/api-reference/dex-api/ws-streams",editUrl:"https://github.com/bnb-chain/bnb-chain.github.io/blob/master/docs/beaconchain/develop/api-reference/dex-api/ws-streams.md",tags:[],version:"current",frontMatter:{},sidebar:"bscSideBar",previous:{title:"WebSocket Connections",permalink:"/docs/beaconchain/develop/api-reference/dex-api/ws-connection"},next:{title:"Node RPC",permalink:"/docs/beaconchain/develop/api-reference/node-rpc"}},p=[{value:"1. Orders",id:"1-orders",children:[],level:3},{value:"2. Account",id:"2-account",children:[],level:3},{value:"3. Transfer",id:"3-transfer",children:[],level:3},{value:"4. Trades",id:"4-trades",children:[],level:3},{value:"5. Diff. Depth Stream",id:"5-diff-depth-stream",children:[],level:3},{value:"6. Book Depth Streams",id:"6-book-depth-streams",children:[],level:3},{value:"7. Kline/Candlestick Streams",id:"7-klinecandlestick-streams",children:[],level:3},{value:"8. Individual Symbol Ticker Streams",id:"8-individual-symbol-ticker-streams",children:[],level:3},{value:"9. All Symbols Ticker Streams",id:"9-all-symbols-ticker-streams",children:[],level:3},{value:"10. Individual Symbol Mini Ticker Streams",id:"10-individual-symbol-mini-ticker-streams",children:[],level:3},{value:"11. All Symbols Mini Ticker Streams",id:"11-all-symbols-mini-ticker-streams",children:[],level:3},{value:"12. Blockheight",id:"12-blockheight",children:[],level:3}],d={toc:p};function m(e){var n=e.components,t=(0,r.Z)(e,o);return(0,s.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"websocket-streams"},"WebSocket Streams"),(0,s.kt)("h3",{id:"1-orders"},"1. Orders"),(0,s.kt)("p",null,"Returns individual order updates."),(0,s.kt)("p",null,"Examples are written in JavaScript."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Topic Name:")," orders | Stream: /ws/address"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Mainnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const accountAndOrderAndTransfers = new WebSocket("wss://dex.binance.org/api/ws/bnb1m4m9etgf3ca5wpgkqe5nr6r33a4ynxfln3yz4v");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "orders", address: "bnb1m4m9etgf3ca5wpgkqe5nr6r33a4ynxfln3yz4v" }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Testnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const accountAndOrderAndTransfers = new WebSocket("wss://testnet-dex.binance.org/api/ws/tbnb1qtuf578qs9wfl0wh3vs0r5nszf80gvxd28hkrc");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://testnet-dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "orders", address: "tbnb1qtuf578qs9wfl0wh3vs0r5nszf80gvxd28hkrc" }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Received Payload:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'  {\n    "stream": "orders",\n    "data": [{\n        "e": "executionReport",        // Event type\n        "E": 1499405658658,            // Event height\n        "s": "ETH_BTC",                // Symbol\n        "S": 1,                        // Side, 1 for Buy; 2 for Sell\n        "o": 2,                        // Order type, 2 for LIMIT (only)\n        "f": 1,                        // Time in force,  1 for Good Till Expire (GTE); 3 for Immediate Or Cancel (IOC)\n        "q": "1.00000000",             // Order quantity\n        "p": "0.10264410",             // Order price\n        "x": "NEW",                    // Current execution type\n        "X": "Ack",                    // Current order status, possible values Ack, Canceled, Expired, IocNoFill, PartialFill, FullyFill, FailedBlocking, FailedMatching, Unknown\n        "i": "91D9...7E18-2317",       // Order ID\n        "l": "0.00000000",             // Last executed quantity\n        "z": "0.00000000",             // Cumulative filled quantity\n        "L": "0.00000000",             // Last executed price\n        "n": "10000BNB",               // Commission amount for all user trades within a given block. Fees will be displayed with each order but will be charged once.\n                                       // Fee can be composed of a single symbol, ex: "10000BNB"\n                                       // or multiple symbols if the available "BNB" balance is not enough to cover the whole fees, ex: "1.00000000BNB;0.00001000BTC;0.00050000ETH"\n        "T": 1499405658657,            // Transaction time\n        "t": "TRD1",                   // Trade ID\n        "O": 1499405658657,            // Order creation time\n    },\n    {\n        "e": "executionReport",        // Event type\n        "E": 1499405658658,            // Event height\n        "s": "ETH_BNB",                // Symbol\n        "S": "BUY",                    // Side\n        "o": "LIMIT",                  // Order type\n        "f": "GTE",                    // Time in force\n        "q": "1.00000000",             // Order quantity\n        "p": "0.10264410",             // Order price\n        "x": "NEW",                    // Current execution type\n        "X": "Ack",                    // Current order status\n        "i": 4293154,                  // Order ID\n        "l": "0.00000000",             // Last executed quantity\n        "z": "0.00000000",             // Cumulative filled quantity\n        "L": "0.00000000",             // Last executed price\n        "n": "10000BNB",               // Commission amount for all user trades within a given block. Fees will be displayed with each order but will be charged once.\n                                        // Fee can be composed of a single symbol, ex: "10000BNB"\n                                        // or multiple symbols if the available "BNB" balance is not enough to cover the whole fees, ex: "1.00000000BNB;0.00001000BTC;0.00050000ETH"\n        "T": 1499405658657,            // Transaction time\n        "t": "TRD2",                   // Trade ID\n        "O": 1499405658657,            // Order creation time\n      }]\n  }\n')),(0,s.kt)("h3",{id:"2-account"},"2. Account"),(0,s.kt)("p",null,"Return account updates."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Topic Name:")," accounts | Stream: /ws/address"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Mainnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const accountAndOrderAndTransfers = new WebSocket("wss://dex.binance.org/api/ws/bnb1m4m9etgf3ca5wpgkqe5nr6r33a4ynxfln3yz4v");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "accounts", address: "bnb1m4m9etgf3ca5wpgkqe5nr6r33a4ynxfln3yz4v" }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Testnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const accountAndOrderAndTransfers = new WebSocket("wss://testnet-dex.binance.org/api/ws/tbnb1qtuf578qs9wfl0wh3vs0r5nszf80gvxd28hkrc");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://testnet-dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "accounts", address: "tbnb1qtuf578qs9wfl0wh3vs0r5nszf80gvxd28hkrc" }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Received Payload:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n    "stream": "accounts",\n    "data": [{\n      "e": "outboundAccountInfo",   // Event type\n      "E": 1499405658849,           // Event height\n      "B": [                        // Balances array\n        {\n          "a": "LTC",               // Asset\n          "f": "17366.18538083",    // Free amount\n          "l": "0.00000000",        // Locked amount\n          "r": "0.00000000"         // Frozen amount\n        },\n        {\n          "a": "BTC",\n          "f": "10537.85314051",\n          "l": "2.19464093",\n          "r": "0.00000000"\n        },\n        {\n          "a": "ETH",\n          "f": "17902.35190619",\n          "l": "0.00000000",\n          "r": "0.00000000"\n        }\n      ]\n    }]\n}\n')),(0,s.kt)("h3",{id:"3-transfer"},"3. Transfer"),(0,s.kt)("p",null,"Return transfer updates if address is involved (as sender or receiver) in a transfer. Multisend is also covered"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Topic Name:")," transfers | Stream: /ws/address"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Mainnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const accountAndOrderAndTransfers = new WebSocket("wss://dex.binance.org/api/ws/bnb1z220ps26qlwfgz5dew9hdxe8m5malre3qy6zr9");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "transfers", address: "bnb1z220ps26qlwfgz5dew9hdxe8m5malre3qy6zr9" }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Testnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const accountAndOrderAndTransfers = new WebSocket("wss://testnet-dex.binance.org/api/ws/tbnb1c346qk3yfk89lzcacwzxsx402rv25gu6v40ghf");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://testnet-dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "transfers", address: "tbnb1c346qk3yfk89lzcacwzxsx402rv25gu6v40ghf" }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Received Payload:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "stream": "transfers",\n  "data": {\n    "e":"outboundTransferInfo",                                                // Event type\n    "E":12893,                                                                 // Event height\n    "H":"0434786487A1F4AE35D49FAE3C6F012A2AAF8DD59EC860DC7E77123B761DD91B",    // Transaction hash\n    "M":"123456789",                                                           // Transaction memo, added for BEP39\n    "f":"bnb1z220ps26qlwfgz5dew9hdxe8m5malre3qy6zr9",                          // From addr\n    "t":\n      [{\n        "o":"bnb1xngdalruw8g23eqvpx9klmtttwvnlk2x4lfccu",                      // To addr\n        "c":[{                                                                 // Coins\n          "a":"BNB",                                                           // Asset\n          "A":"100.00000000"                                                   // Amount\n          }]\n      }]\n  }\n}\n\n')),(0,s.kt)("h3",{id:"4-trades"},"4. Trades"),(0,s.kt)("p",null,"Returns individual trade updates."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Topic Name:")," trades | Stream: \\<symbol",">","@trades"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Mainnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const trades = new WebSocket("wss://dex.binance.org/api/ws/BNB_BTCB-1DE@trades");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "trades", symbols: ["BNB_BTCB-1DE"] }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Testnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const trades = new WebSocket("wss://testnet-dex.binance.org/api/ws/BNB_USDT.B-B7C@trades");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://testnet-dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "trades", symbols: ["BNB_USDT.B-B7C"] }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Received Payload:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n    "stream": "trades",\n    "data": [{\n        "e": "trade",       // Event type\n        "E": 123456789,     // Event height\n        "s": "BNB_BTC",     // Symbol\n        "t": "12345",       // Trade ID\n        "p": "0.001",       // Price\n        "q": "100",         // Quantity\n        "b": "88",          // Buyer order ID\n        "a": "50",          // Seller order ID\n        "T": 123456785,     // Trade time\n        "sa": "bnb1me5u083m2spzt8pw8vunprnctc8syy64hegrcp", // SellerAddress\n        "ba": "bnb1kdr00ydr8xj3ydcd3a8ej2xxn8lkuja7mdunr5" // BuyerAddress\n        "tt": 1             //tiekertype 0: Unknown 1: SellTaker 2: BuyTaker 3: BuySurplus 4: SellSurplus 5: Neutral\n    },\n    {\n        "e": "trade",       // Event type\n        "E": 123456795,     // Event time\n        "s": "BNB_BTC",     // Symbol\n        "t": "12348",       // Trade ID\n        "p": "0.001",       // Price\n        "q": "100",         // Quantity\n        "b": "88",          // Buyer order ID\n        "a": "52",          // Seller order ID\n        "T": 123456795,     // Trade time\n        "sa": "bnb1me5u083m2spzt8pw8vunprnctc8syy64hegrcp", // SellerAddress\n        "ba": "bnb1kdr00ydr8xj3ydcd3a8ej2xxn8lkuja7mdunr5" // BuyerAddress\n        "tt": 1             //tiekertype 0: Unknown 1: SellTaker 2: BuyTaker 3: BuySurplus 4: SellSurplus 5: Neutral\n    }]\n}\n')),(0,s.kt)("h3",{id:"5-diff-depth-stream"},"5. Diff. Depth Stream"),(0,s.kt)("p",null,"Order book price and quantity depth updates used to locally keep an order book."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Topic Name:")," marketDiff | Stream: \\<symbol",">","@marketDiff"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Mainnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const marketDiff = new WebSocket("wss://dex.binance.org/api/ws/BNB_BTCB-1DE@marketDiff");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "marketDiff", symbols: ["BNB_BTCB-1DE"] }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Testnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const marketDiff = new WebSocket("wss://testnet-dex.binance.org/api/ws/BNB_USDT.B-B7C@marketDiff");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://testnet-dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "marketDiff", symbols: ["BNB_USDT.B-B7C"] }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Received Payload:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n    "stream": "marketDiff",\n    "data": {\n        "e": "depthUpdate",   // Event type\n        "E": 123456789,       // Event time\n        "s": "BNB_BTC",       // Symbol\n        "b": [                // Bids to be updated\n            [\n            "0.0024",         // Price level to be updated\n            "10"              // Quantity\n            ]\n        ],\n        "a": [                // Asks to be updated\n            [\n            "0.0026",         // Price level to be updated\n            "100"             // Quantity\n            ]\n        ]\n    }\n}\n')),(0,s.kt)("h3",{id:"6-book-depth-streams"},"6. Book Depth Streams"),(0,s.kt)("p",null,"Top 20 (could extend to 100, 500, 1000) levels of bids and asks."),(0,s.kt)("p",null,"If you want subscribe topic marketDepth1000,your client must enable ",(0,s.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc7692"},"compression"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Topic Name:")," marketDepth | Stream: \\<symbol",">","@marketDepth"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Extension:")," marketDepth100, marketDepth500, marketDepth1000 | Stream: \\<symbol",">","@marketDepth100, \\<symbol",">","@marketDepth500, \\<symbol",">","@marketDepth1000"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Mainnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const marketDepth = new WebSocket("wss://dex.binance.org/api/ws/BNB_BTCB-1DE@marketDepth");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "marketDepth", symbols: ["BNB_BTCB-1DE"] }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Testnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const marketDepth = new WebSocket("wss://testnet-dex.binance.org/api/ws/BNB_USDT.B-B7C@marketDepth");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://testnet-dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "marketDepth", symbols: ["BNB_USDT.B-B7C"] }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Received Payload:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n    "stream": "marketDepth",\n    "data": {\n        "lastUpdateId": 160,    // Last update ID\n        "symbol": "BNB_BTC",    // symbol\n        "bids": [               // Bids to be updated\n            [\n            "0.0024",           // Price level to be updated\n            "10"                // Quantity\n            ]\n        ],\n        "asks": [               // Asks to be updated\n            [\n            "0.0026",           // Price level to be updated\n            "100"               // Quantity\n            ]\n        ]\n    }\n}\n')),(0,s.kt)("h3",{id:"7-klinecandlestick-streams"},"7. Kline/Candlestick Streams"),(0,s.kt)("p",null,"The kline/candlestick stream pushes updates to the current klines/candlestick every second."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Kline/Candlestick chart intervals:")),(0,s.kt)("p",null,"m -> minutes; h -> hours; d -> days; w -> weeks; M -> months"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"1m"),(0,s.kt)("li",{parentName:"ul"},"3m"),(0,s.kt)("li",{parentName:"ul"},"5m"),(0,s.kt)("li",{parentName:"ul"},"15m"),(0,s.kt)("li",{parentName:"ul"},"30m"),(0,s.kt)("li",{parentName:"ul"},"1h"),(0,s.kt)("li",{parentName:"ul"},"2h"),(0,s.kt)("li",{parentName:"ul"},"4h"),(0,s.kt)("li",{parentName:"ul"},"6h"),(0,s.kt)("li",{parentName:"ul"},"8h"),(0,s.kt)("li",{parentName:"ul"},"12h"),(0,s.kt)("li",{parentName:"ul"},"1d"),(0,s.kt)("li",{parentName:"ul"},"3d"),(0,s.kt)("li",{parentName:"ul"},"1w"),(0,s.kt)("li",{parentName:"ul"},"1M")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Topic Name:")," kline",(0,s.kt)("em",{parentName:"p"},"\\<interval",">"," | Stream: \\<symbol",">","@kline"),"\\<interval",">"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Mainnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const kline = new WebSocket("wss://dex.binance.org/api/ws/BNB_BTCB-1DE@kline_1h");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "kline_1h", symbols: ["BNB_BTCB-1DE"] }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Testnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const kline = new WebSocket("wss://testnet-dex.binance.org/api/ws/BBNB_USDT.B-B7C@kline_1h");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://testnet-dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "kline_1h", symbols: ["BNB_USDT.B-B7C"] }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Received Payload:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "stream": "kline_1m",\n  "data": {\n    "e": "kline",         // Event type\n    "E": 123456789,       // Event time\n    "s": "BNBBTC",        // Symbol\n    "k": {\n      "t": 123400000,     // Kline start time\n      "T": 123460000,     // Kline close time\n      "s": "ABC_0DX-BNB",      // Symbol\n      "i": "1m",          // Interval\n      "f": "100",         // First trade ID\n      "L": "200",         // Last trade ID\n      "o": "0.0010",      // Open price\n      "c": "0.0020",      // Close price\n      "h": "0.0025",      // High price\n      "l": "0.0015",      // Low price\n      "v": "1000",        // Base asset volume\n      "n": 100,           // Number of trades\n      "x": false,         // Is this kline closed?\n      "q": "1.0000",      // Quote asset volume\n    }\n  }\n}\n')),(0,s.kt)("h3",{id:"8-individual-symbol-ticker-streams"},"8. Individual Symbol Ticker Streams"),(0,s.kt)("p",null,"24hr Ticker statistics for a single symbol are pushed every second."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Topic Name:")," ticker | Stream: \\<symbol",">","@ticker"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Mainnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const ticker = new WebSocket("wss://dex.binance.org/api/ws/BNB_BTCB-1D@ticker");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "ticker", symbols: ["BNB_BTCB-1D"] }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Testnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const ticker = new WebSocket("wss://testnet-dex.binance.org/api/ws/BBNB_USDT.B-B7C@ticker");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://testnet-dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "ticker", symbols: ["BNB_USDT.B-B7C"] }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Received Payload:")),(0,s.kt)("p",null,'"stream" and "data" wrapper object is ignored here'),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "stream": "ticker",\n  "data": {\n    "e": "24hrTicker",  // Event type\n    "E": 123456789,     // Event time\n    "s": "ABC_0DX-BNB",      // Symbol\n    "p": "0.0015",      // Price change\n    "P": "250.00",      // Price change percent\n    "w": "0.0018",      // Weighted average price\n    "x": "0.0009",      // Previous day\'s close price\n    "c": "0.0025",      // Current day\'s close price\n    "Q": "10",          // Close trade\'s quantity\n    "b": "0.0024",      // Best bid price\n    "B": "10",          // Best bid quantity\n    "a": "0.0026",      // Best ask price\n    "A": "100",         // Best ask quantity\n    "o": "0.0010",      // Open price\n    "h": "0.0025",      // High price\n    "l": "0.0010",      // Low price\n    "v": "10000",       // Total traded base asset volume\n    "q": "18",          // Total traded quote asset volume\n    "O": 0,             // Statistics open time\n    "C": 86400000,      // Statistics close time\n    "F": "0",           // First trade ID\n    "L": "18150",       // Last trade Id\n    "n": 18151          // Total number of trades\n  }\n}\n')),(0,s.kt)("h3",{id:"9-all-symbols-ticker-streams"},"9. All Symbols Ticker Streams"),(0,s.kt)("p",null,"24hr Ticker statistics for a all symbols are pushed every second."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Topic Name:")," allTickers | Stream: $all@allTickers"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Mainnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const allTickers = new WebSocket("wss://dex.binance.org/api/ws/$all@allTickers");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "allTickers", symbols: ["$all"] }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const allTickers = new WebSocket("wss://testnet-dex.binance.org/api/ws/$all@allTickers");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://testnet-dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "allTickers", symbols: ["$all"] }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Received Payload:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "stream": "allTickers",\n  "data": [\n    {\n      "e": "24hrTicker",  // Event type\n      "E": 123456789,     // Event time\n      "s": "ABC_0DX-BNB",      // Symbol\n      "p": "0.0015",      // Price change\n      "P": "250.00",      // Price change percent\n      "w": "0.0018",      // Weighted average price\n      "x": "0.0009",      // Previous day\'s close price\n      "c": "0.0025",      // Current day\'s close price\n      "Q": "10",          // Close trade\'s quantity\n      "b": "0.0024",      // Best bid price\n      "B": "10",          // Best bid quantity\n      "a": "0.0026",      // Best ask price\n      "A": "100",         // Best ask quantity\n      "o": "0.0010",      // Open price\n      "h": "0.0025",      // High price\n      "l": "0.0010",      // Low price\n      "v": "10000",       // Total traded base asset volume\n      "q": "18",          // Total traded quote asset volume\n      "O": 0,             // Statistics open time\n      "C": 86400000,      // Statistics close time\n      "F": "0",           // First trade ID\n      "L": "18150",       // Last trade Id\n      "n": 18151          // Total number of trades\n    },\n    {\n      ...\n    }]\n}\n')),(0,s.kt)("h3",{id:"10-individual-symbol-mini-ticker-streams"},"10. Individual Symbol Mini Ticker Streams"),(0,s.kt)("p",null,"A ticker for a single symbol is pushed every second."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Topic Name:")," miniTicker | Stream: \\<symbol",">","@miniTicker"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Mainnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const miniTicker = new WebSocket("wss://dex.binance.org/api/ws/BNB_BTCB-1D@miniTicker");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "miniTicker", symbols: ["BNB_BTCB-1D"] }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Testnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const miniTicker = new WebSocket("wss://testnet-dex.binance.org/api/ws/BNB_USDT.B-B7C@miniTicker");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://testnet-dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "miniTicker", symbols: ["BNB_USDT.B-B7C"] }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Received Payload:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "stream": "miniTicker",\n  "data": {\n    "e": "24hrMiniTicker",    // Event type\n    "E": 123456789,           // Event time\n    "s": "ABC_0DX-BNB",            // Symbol\n    "c": "0.0025",            // Current day\'s close price\n    "o": "0.0010",            // Open price\n    "h": "0.0025",            // High price\n    "l": "0.0010",            // Low price\n    "v": "10000",             // Total traded base asset volume\n    "q": "18",                // Total traded quote asset volume\n  }\n}\n')),(0,s.kt)("h3",{id:"11-all-symbols-mini-ticker-streams"},"11. All Symbols Mini Ticker Streams"),(0,s.kt)("p",null,"Array of 24hr Mini Ticker statistics for a all symbols pushed every second."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Topic Name:")," allMiniTickers | Stream: $all@allMiniTickers"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Mainnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const miniTickers = new WebSocket("wss://dex.binance.org/api/ws/$all@allMiniTickers");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "allMiniTickers", symbols: ["$all"] }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Testnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const miniTickers = new WebSocket("wss://testnet-dex.binance.org/api/ws/$all@allMiniTickers");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://testnet-dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "allMiniTickers", symbols: ["$all"] }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Received Payload:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "stream": "allMiniTickers",\n  "data": [\n    {\n      "e": "24hrMiniTicker",      // Event type\n      "E": 123456789,             // Event time\n      "s": "ABC_0DX-BNB",              // Symbol\n      "c": "0.0025",              // Current day\'s close price\n      "o": "0.0010",              // Open price\n      "h": "0.0025",              // High price\n      "l": "0.0010",              // Low price\n      "v": "10000",               // Total traded base asset volume\n      "q": "18",                  // Total traded quote asset volume\n    },\n    {\n      ...\n    }]\n}\n')),(0,s.kt)("h3",{id:"12-blockheight"},"12. Blockheight"),(0,s.kt)("p",null,"Streams the latest block height."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Topic Name:")," blockheight | Stream: $all@blockheight"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Mainnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const blockHeights = new WebSocket("wss://dex.binance.org/api/ws/$all@blockheight");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "blockheight", symbols: ["$all"] }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Testnet Connection Example:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'    // URL connection\n    const blockHeights = new WebSocket("wss://testnet-dex.binance.org/api/ws/$all@blockheight");\n\n    // Or Subscribe method\n    const conn = new WebSocket("wss://testnet-dex.binance.org/api/ws");\n    conn.onopen = function(evt) {\n        conn.send(JSON.stringify({ method: "subscribe", topic: "blockheight", symbols: ["$all"] }));\n    }\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Received Payload:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "stream": "blockheight",\n  "data": {\n    "h": 123456789,     // Block height\n  }\n}\n')))}m.isMDXComponent=!0}}]);