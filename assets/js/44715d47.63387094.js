"use strict";(self.webpackChunkbeta_BNB_Docs=self.webpackChunkbeta_BNB_Docs||[]).push([[5904],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(a),m=r,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return a?n.createElement(h,l(l({ref:t},p),{},{components:a})):n.createElement(h,l({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},38944:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var n=a(87462),r=a(63366),i=(a(67294),a(3905)),l=["components"],o={sidebar_label:"Launch BAS"},s="Launch BAS",u={unversionedId:"bas/develop/BAS-Testnet/launch-bas",id:"bas/develop/BAS-Testnet/launch-bas",isDocsHomePage:!1,title:"Launch BAS",description:"Prerequisites",source:"@site/docs/bas/develop/BAS-Testnet/launch-bas.md",sourceDirName:"bas/develop/BAS-Testnet",slug:"/bas/develop/BAS-Testnet/launch-bas",permalink:"/docs/bas/develop/BAS-Testnet/launch-bas",editUrl:"https://github.com/RumeelHussainbnb/beta_BSC_Docs/docs/bas/develop/BAS-Testnet/launch-bas.md",tags:[],version:"current",frontMatter:{sidebar_label:"Launch BAS"},sidebar:"bscSideBar",previous:{title:"Use MetaMask For BAS",permalink:"/docs/bas/develop/BAS-Testnet/metamask-with-bas-testnet"},next:{title:"Deploy ERC-20 Token",permalink:"/docs/bas/develop/BAS-Testnet/tutorials/deploy-erc20-tokens"}},p=[{value:"Prerequisites",id:"prerequisites",children:[],level:2},{value:"Config file parameters",id:"config-file-parameters",children:[],level:2},{value:"Launch",id:"launch",children:[{value:"Default option",id:"default-option",children:[],level:3},{value:"Without a balance loader and SSL certificates",id:"without-a-balance-loader-and-ssl-certificates",children:[],level:3}],level:2},{value:"Exposed ports",id:"exposed-ports",children:[],level:2}],c={toc:p};function d(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"launch-bas"},"Launch BAS"),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("p",null,"Before running the command you must do the following steps:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Ensure you have a dedicated machine that has at least 8 dedicated CPU cores and 32GB RAM, as it needs to run 7 nodes."),(0,i.kt)("li",{parentName:"ul"},"Make sure you have a wildcard domain ",(0,i.kt)("inlineCode",{parentName:"li"},"*.example.com")," set to your machine (use a dedicated machine with a public IP)."),(0,i.kt)("li",{parentName:"ul"},"Modify the ",(0,i.kt)("inlineCode",{parentName:"li"},"config.json")," file to update parameters as you need (you can find all addresses in the ",(0,i.kt)("inlineCode",{parentName:"li"},"keystore")," folder).")),(0,i.kt)("h2",{id:"config-file-parameters"},"Config file parameters"),(0,i.kt)("p",null,"The config file structure is as such:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"chainId")," \u2014 identifier of your BAS chain."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"validators")," \u2014 list of initial validator set (make sure that you have the same list in the docker compose file)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"systemTreasury")," \u2014 address of system treasury that accumulates 1/16 of rewards (might be governance).",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"consensusParams")," \u2014 parameters for the consensus and staking."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"activeValidatorsLength")," \u2014 suggested values are (3k+1, where k is honest validators, even better): 7, 13, 19, 25, 31..."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"epochBlockInterval")," \u2014 length of an epoch, specified in blocks; recommended length is 1 day (86400/3=28800, where 3s is block time)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"misdemeanorThreshold")," \u2014 after missing this amount of blocks per day validator losses all daily rewards (penalty)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"felonyThreshold")," \u2014 after missing this amount of blocks per day validator goes to jail for N epochs."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"validatorJailEpochLength")," \u2014 how many epochs validator should stay in jail (7 epochs = ~7 days)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"undelegatePeriod")," \u2014 allow claiming funds only after 6 epochs (~7 days)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"minValidatorStakeAmount")," \u2014 how many tokens the validator must stake to create a validator (in ETH)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"minStakingAmount")," \u2014 minimum staking amount for delegators (in ETH)."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"initialStakes")," \u2014 initial stakes for the validators (must match with validators list)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"votingPeriod")," \u2014 default voting period for the governance proposals."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"faucet")," \u2014 a map with initial balances for the faucet and other needs.")),(0,i.kt)("h2",{id:"launch"},"Launch"),(0,i.kt)("p",null,"You have two launching options:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Default option"),(0,i.kt)("li",{parentName:"ul"},"Without a balance loader and SSL certificates")),(0,i.kt)("h3",{id:"default-option"},"Default option"),(0,i.kt)("p",null,"You can check the Makefile to choose more interesting commands, but if you just need to set up everything, just run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"apt update\napt install build-essential socat\ngit clone https://github.com/Ankr-network/bas-devnet-setup bas --recursive\ncd bas\nDOMAIN_NAME=dev-02.bas.ankr.com make all\n")),(0,i.kt)("p",null,":::hint\nThe variable ",(0,i.kt)("inlineCode",{parentName:"p"},"DOMAIN_NAME")," should be set to your domain.\n:::"),(0,i.kt)("p",null,"Deployed services can be access though next endpoints:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://rpc.$%7BDOMAIN_NAME%7D"},"https://rpc.${DOMAIN_NAME}")," (port 8545,9546) - Web3 RPC endpoint"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://explorer.$%7BDOMAIN_NAME%7D"},"https://explorer.${DOMAIN_NAME}")," (port 4000) - Blockchain Explorer"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://faucet.$%7BDOMAIN_NAME%7D"},"https://faucet.${DOMAIN_NAME}")," (port 3000) - Faucet"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://staking.$%7BDOMAIN_NAME%7D"},"https://staking.${DOMAIN_NAME}")," (port 3001) - Staking UI")),(0,i.kt)("h3",{id:"without-a-balance-loader-and-ssl-certificates"},"Without a balance loader and SSL certificates"),(0,i.kt)("p",null,"If you want to run a node without a load balancer and SSL certificates, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"make all-no-balancer\n")),(0,i.kt)("h2",{id:"exposed-ports"},"Exposed ports"),(0,i.kt)("p",null,"Docker Compose files expose next ports:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"7432 - Blockscout PostgreSQL database"),(0,i.kt)("li",{parentName:"ul"},"4000 - Blockscout Explorer"),(0,i.kt)("li",{parentName:"ul"},"3000 - Faucet UI"),(0,i.kt)("li",{parentName:"ul"},"3001 - Staking UI"),(0,i.kt)("li",{parentName:"ul"},"8545 - RPC endpoint"),(0,i.kt)("li",{parentName:"ul"},"8546 - WS endpoint"),(0,i.kt)("li",{parentName:"ul"},"30303 - Bootnode")))}d.isMDXComponent=!0}}]);