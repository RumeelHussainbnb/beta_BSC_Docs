"use strict";(self.webpackChunkbeta_BNB_Docs=self.webpackChunkbeta_BNB_Docs||[]).push([[4341],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9462:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var r=n(87462),o=n(63366),a=(n(67294),n(3905)),l=["components"],i={},c="Run a Local Testnet",s={unversionedId:"beaconchain/develop/node/localnetwork",id:"beaconchain/develop/node/localnetwork",isDocsHomePage:!1,title:"Run a Local Testnet",description:"Single-node Local Testnet",source:"@site/docs/beaconchain/develop/node/localnetwork.md",sourceDirName:"beaconchain/develop/node",slug:"/beaconchain/develop/node/localnetwork",permalink:"/docs/beaconchain/develop/node/localnetwork",editUrl:"https://github.com/RumeelHussainbnb/beta_BSC_Docs/blob/master/docs/beaconchain/develop/node/localnetwork.md",tags:[],version:"current",frontMatter:{},sidebar:"bscSideBar",previous:{title:"Upgrade",permalink:"/docs/beaconchain/develop/node/upgrade"},next:{title:"Common Issues When Running a Full Node",permalink:"/docs/beaconchain/develop/node/fullnodeissue"}},u=[{value:"Single-node Local Testnet",id:"single-node-local-testnet",children:[{value:"Requirements",id:"requirements",children:[],level:3},{value:"Create Genesis File and Start the Network",id:"create-genesis-file-and-start-the-network",children:[],level:3}],level:2}],p={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"run-a-local-testnet"},"Run a Local Testnet"),(0,a.kt)("h2",{id:"single-node-local-testnet"},"Single-node Local Testnet"),(0,a.kt)("p",null,"This guide helps you create a single validator node that runs a network locally for testing and other development related uses."),(0,a.kt)("h3",{id:"requirements"},"Requirements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Install ",(0,a.kt)("a",{parentName:"li",href:"/docs/beaconchain/develop/node/install"},"bnbchaind"))),(0,a.kt)("h3",{id:"create-genesis-file-and-start-the-network"},"Create Genesis File and Start the Network"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"# You can run all of these commands from your home directory\ncd $HOME\n")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Initialize the config.toml file that will help you to bootstrap the network")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"bnbchaind init --home /Users/huangsuyu/Documents/work/localnet --moniker test\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Initialize the genesis file that will help you to bootstrap the network\nbnbchaind testnet --v 1 --chain-id local-testnet")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Copy genesis.json and others to $home/config"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cp ./mynetwork/config/genesis $home/config\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Edit app.toml to set ugrade height")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"FixSignBytesOverflowHeight = 1\n")),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"Start our node")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"# Now its safe to start `bnbchaind`\nbnbchaind start --home $home\n")))}d.isMDXComponent=!0}}]);