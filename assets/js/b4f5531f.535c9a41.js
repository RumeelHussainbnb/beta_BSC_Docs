"use strict";(self.webpackChunkbeta_BNB_Docs=self.webpackChunkbeta_BNB_Docs||[]).push([[3159],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,b=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(b,c(c({ref:t},u),{},{components:n})):r.createElement(b,c({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9800:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),c=["components"],i={sidebar_label:"Key Management"},s="Key Management",l={unversionedId:"bas/develop/Aries-Testnet/key-management",id:"bas/develop/Aries-Testnet/key-management",isDocsHomePage:!1,title:"Key Management",description:"This article is a guide about key management strategy on the client-side of your Decentralized Application on BAS",source:"@site/docs/bas/develop/Aries-Testnet/key-management.md",sourceDirName:"bas/develop/Aries-Testnet",slug:"/bas/develop/Aries-Testnet/key-management",permalink:"/docs/bas/develop/Aries-Testnet/key-management",editUrl:"https://github.com/RumeelHussainbnb/beta_BSC_Docs/blob/master/docs/bas/develop/Aries-Testnet/key-management.md",tags:[],version:"current",frontMatter:{sidebar_label:"Key Management"},sidebar:"bscSideBar",previous:{title:"Use MetaMask with Aries Network",permalink:"/docs/bas/develop/Aries-Testnet/metamask-with-aries-testnet"},next:{title:"Deploy ERC20 Tokens",permalink:"/docs/bas/develop/Aries-Testnet/tutorials/deploy-erc20-tokens"}},u=[{value:"Set up Web3",id:"set-up-web3",children:[],level:2},{value:"Connect to BAS ARIES network",id:"connect-to-bas-aries-network",children:[],level:2},{value:"Set up an account",id:"set-up-an-account",children:[],level:2},{value:"Recover account",id:"recover-account",children:[],level:2},{value:"Example",id:"example",children:[],level:2}],p={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"key-management"},"Key Management"),(0,o.kt)("p",null,"This article is a guide about key management strategy on the client-side of your Decentralized Application on BAS"),(0,o.kt)("h2",{id:"set-up-web3"},"Set up Web3"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"web3.js")," is a javascript library that allows our client-side application to talk to the blockchain. We configure Web3 to communicate via Metamask. For more details about ",(0,o.kt)("inlineCode",{parentName:"p"},"web3.js"),", refer to ",(0,o.kt)("a",{parentName:"p",href:"https://web3js.readthedocs.io/en/v1.2.2/getting-started.html#adding-web3-js"},"official docs"),"."),(0,o.kt)("h2",{id:"connect-to-bas-aries-network"},"Connect to BAS ARIES network"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    // testnet\n    const web3 = new Web3('https://bas-aries-public.nodereal.io');\n")),(0,o.kt)("h2",{id:"set-up-an-account"},"Set up an account"),(0,o.kt)("p",null,"If the installation and instantiation of Web3 were successful, the following should successfully return a random "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"account:\n    const account = web3.eth.accounts.create();\n")),(0,o.kt)("h2",{id:"recover-account"},"Recover account"),(0,o.kt)("p",null,"If you have backed up the private key of your account, you can use it to restore your account."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'    const account = web3.eth.accounts.privateKeyToAccount("$private-key")\n')),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"const Web3 = require('web3');\nasync function main() {\n\u200b\n    const web3 = new Web3('https://bas-aries-public.nodereal.io');\n    const loader = setupLoader({ provider: web3 }).web3;\n\u200b\n    const account = web3.eth.accounts.create();\n    console.log(account);\n}\n")))}d.isMDXComponent=!0}}]);