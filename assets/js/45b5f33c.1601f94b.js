"use strict";(self.webpackChunkbeta_BNB_Docs=self.webpackChunkbeta_BNB_Docs||[]).push([[1224],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,b=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(b,c(c({ref:t},p),{},{components:n})):a.createElement(b,c({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},55272:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),c=["components"],i={sidebar_label:"Introduction",sidebar_position:2},l="BEP20 Token Introduction",s={unversionedId:"BEP20",id:"BEP20",isDocsHomePage:!1,title:"BEP20 Token Introduction",description:"A BEP20 token must implement the interface IBEP20 in IBEP20.sol. This is a template contract BEP20Token.template. Users just need to fill in name, symbol, decimals and totalSupply according to their own requirements:",source:"@site/docs/BEP20.md",sourceDirName:".",slug:"/BEP20",permalink:"/docs/BEP20",editUrl:"https://github.com/RumeelHussainbnb/beta_BSC_Docs/blob/master/docs/docs/BEP20.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Introduction",sidebar_position:2},sidebar:"bscSideBar",previous:{title:"Deploy NFT on BSC",permalink:"/docs/ERC721"},next:{title:"Issue BEP20 Tokens",permalink:"/docs/issue-BEP20"}},p=[{value:"Interact with Contract with Web3 and NodeJS.",id:"interact-with-contract-with-web3-and-nodejs",children:[{value:"Connect to BNB Smart Chain&#39;s public RPC endpoint",id:"connect-to-bnb-smart-chains-public-rpc-endpoint",children:[],level:3},{value:"Create a wallet",id:"create-a-wallet",children:[],level:3},{value:"Recover a wallet",id:"recover-a-wallet",children:[],level:3},{value:"Check balance",id:"check-balance",children:[],level:3},{value:"Create transaction",id:"create-transaction",children:[],level:3}],level:2}],u={toc:p};function d(e){var t=e.components,i=(0,r.Z)(e,c);return(0,o.kt)("wrapper",(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"bep20-token-introduction"},"BEP20 Token Introduction"),(0,o.kt)("p",null,"A BEP20 token must implement the interface ",(0,o.kt)("inlineCode",{parentName:"p"},"IBEP20")," in ",(0,o.kt)("a",{target:"_blank",href:n(23529).Z},"IBEP20.sol"),". This is a template contract ",(0,o.kt)("a",{target:"_blank",href:n(14033).Z},"BEP20Token.template"),". Users just need to fill in ",(0,o.kt)("inlineCode",{parentName:"p"},"_name"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"_symbol"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"_decimals")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"_totalSupply")," according to their own requirements:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  constructor() public {\n    _name = {{TOKEN_NAME}};\n    _symbol = {{TOKEN_SYMBOL}};\n    _decimals = {{DECIMALS}};\n    _totalSupply = {{TOTAL_SUPPLY}};\n    _balances[msg.sender] = _totalSupply;\n\n    emit Transfer(address(0), msg.sender, _totalSupply);\n  }\n")),(0,o.kt)("p",null,"Then users can use ",(0,o.kt)("a",{parentName:"p",href:"https://remix.ethereum.org"},"Remix IDE")," and ",(0,o.kt)("a",{parentName:"p",href:"/docs/wallet/metamask"},"Metamask")," to compile and deploy the BEP20 contract to BSC."),(0,o.kt)("h2",{id:"interact-with-contract-with-web3-and-nodejs"},"Interact with Contract with ",(0,o.kt)("a",{parentName:"h2",href:"https://www.npmjs.com/package/web3"},"Web3")," and NodeJS."),(0,o.kt)("h3",{id:"connect-to-bnb-smart-chains-public-rpc-endpoint"},"Connect to BNB Smart Chain's public RPC endpoint"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const Web3 = require('web3');\n// mainnet\nconst web3 = new Web3('https://bsc-dataseed1.binance.org:443');\n\n// testnet\nconst web3 = new Web3('https://data-seed-prebsc-1-s1.binance.org:8545');\n")),(0,o.kt)("h3",{id:"create-a-wallet"},"Create a wallet"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"web3.eth.accounts.create([entropy]);\n\n")),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"web3.eth.accounts.create();\n{\n  address: '0x926605D0729a968266f1BB299d8Df0471C4F5367',\n  privateKey: '0x6b4618539d95f205f33e916e89404b301dde545c0c4acc181fd0c0b42708bad3',\n  signTransaction: [Function: signTransaction],\n  sign: [Function: sign],\n  encrypt: [Function: encrypt]\n}\n\n")),(0,o.kt)("h3",{id:"recover-a-wallet"},"Recover a wallet"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'\nconst account = web3.eth.accounts.privateKeyToAccount("0xe500f5754d761d74c3eb6c2566f4c568b81379bf5ce9c1ecd475d40efe23c577")\n\n')),(0,o.kt)("h3",{id:"check-balance"},"Check balance"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"web3.eth.getBalance(holder).then(console.log);\n\n")),(0,o.kt)("p",null,"Output:"),(0,o.kt)("p",null,"The balance will be bumped by e18 for BNB."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"6249621999900000000\n")),(0,o.kt)("h3",{id:"create-transaction"},"Create transaction"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Parameters")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Object - The transaction object to send:"),(0,o.kt)("li",{parentName:"ul"},"from - String|Number: The address for the sending account. Uses the web3.eth.defaultAccount property, if not specified. Or an address or index of a local wallet in web3.eth.accounts.wallet."),(0,o.kt)("li",{parentName:"ul"},"to - String: (optional) The destination address of the message, left undefined for a contract-creation transaction."),(0,o.kt)("li",{parentName:"ul"},"value - Number|String|BN|BigNumber: (optional) The value transferred for the transaction in wei, also the endowment if it\u2019s a contract-creation transaction."),(0,o.kt)("li",{parentName:"ul"},"gas - Number: (optional, default: To-Be-Determined) The amount of gas to use for the transaction (unused gas is refunded)."),(0,o.kt)("li",{parentName:"ul"},"gasPrice - Number|String|BN|BigNumber: (optional) The price of gas for this transaction in wei, defaults to web3.eth.gasPrice."),(0,o.kt)("li",{parentName:"ul"},"data - String: (optional) Either a ABI byte string containing the data of the function call on a contract, or in the case of a contract-creation transaction the initialisation code."),(0,o.kt)("li",{parentName:"ul"},"nonce - Number: (optional) Integer of a nonce. This allows to overwrite your own pending transactions that use the same nonce.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-Javascript"},"\n    // // Make a transaction using the promise\n    web3.eth.sendTransaction({\n        from: holder,\n        to: '0x0B75fbeB0BC7CC0e9F9880f78a245046eCBDBB0D',\n        value: '1000000000000000000',\n        gas: 5000000,\n        gasPrice: 18e9,\n    }, function(err, transactionHash) {\n      if (err) {\n        console.log(err);\n        } else {\n        console.log(transactionHash);\n       }\n    });\n")))}d.isMDXComponent=!0},14033:function(e,t,n){t.Z=n.p+"assets/files/BEP20Token-90279eb8ba08bbc0df679f37d7886d68.template"},23529:function(e,t,n){t.Z=n.p+"assets/files/IBEP20-4303309a0872bac68e4a00266e9cf40a.sol"}}]);