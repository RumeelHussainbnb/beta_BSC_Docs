"use strict";(self.webpackChunkbeta_BNB_Docs=self.webpackChunkbeta_BNB_Docs||[]).push([[2470],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},17370:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var r=n(87462),o=n(63366),a=(n(67294),n(3905)),i=["components"],l={sidebar_label:"Development Tools"},s="Development Tools",c={unversionedId:"bas/develop/BAS-Testnet/development-tools",id:"bas/develop/BAS-Testnet/development-tools",isDocsHomePage:!1,title:"Development Tools",description:"JSON RPC Endpoints",source:"@site/docs/bas/develop/BAS-Testnet/development-tools.md",sourceDirName:"bas/develop/BAS-Testnet",slug:"/bas/develop/BAS-Testnet/development-tools",permalink:"/docs/bas/develop/BAS-Testnet/development-tools",editUrl:"https://github.com/RumeelHussainbnb/beta_BSC_Docs/docs/bas/develop/BAS-Testnet/development-tools.md",tags:[],version:"current",frontMatter:{sidebar_label:"Development Tools"},sidebar:"bscSideBar",previous:{title:"Bridge Security",permalink:"/docs/bas/security/bridge-security"},next:{title:"Use MetaMask For BAS",permalink:"/docs/bas/develop/BAS-Testnet/metamask-with-bas-testnet"}},p=[{value:"JSON RPC Endpoints",id:"json-rpc-endpoints",children:[{value:"ChainID",id:"chainid",children:[],level:3},{value:"RPC Endpoints",id:"rpc-endpoints",children:[],level:3},{value:"Rate limit",id:"rate-limit",children:[],level:3},{value:"Starting HTTP JSON-RPC",id:"starting-http-json-rpc",children:[],level:3},{value:"JSON-RPC methods",id:"json-rpc-methods",children:[],level:3}],level:2},{value:"Smart Contracts",id:"smart-contracts",children:[],level:2},{value:"IDE and Libraries",id:"ide-and-libraries",children:[],level:2},{value:"Faucet",id:"faucet",children:[],level:2},{value:"Explorer",id:"explorer",children:[],level:2}],u={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"development-tools"},"Development Tools"),(0,a.kt)("h2",{id:"json-rpc-endpoints"},"JSON RPC Endpoints"),(0,a.kt)("h3",{id:"chainid"},"ChainID"),(0,a.kt)("p",null," 0x75 in hex or 117 in decimal"),(0,a.kt)("h3",{id:"rpc-endpoints"},"RPC Endpoints"),(0,a.kt)("p",null," ",(0,a.kt)("a",{parentName:"p",href:"https://bas-aries-public.nodereal.io/"},"https://bas-aries-public.nodereal.io/")),(0,a.kt)("h3",{id:"rate-limit"},"Rate limit"),(0,a.kt)("p",null,"The rate limit of the BAS endpoint on Testnet is 10K/5min."),(0,a.kt)("h3",{id:"starting-http-json-rpc"},"Starting HTTP JSON-RPC"),(0,a.kt)("p",null,"You can start the HTTP JSON-RPC with the --rpc flag"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"## testnet\ngeth attach * https://bas-aries-public.nodereal.io\n")),(0,a.kt)("h3",{id:"json-rpc-methods"},"JSON-RPC methods"),(0,a.kt)("p",null,"Please refer to this wiki page or use Postman: ",(0,a.kt)("a",{parentName:"p",href:"https://documenter.getpostman.com/view/4117254/ethereum-json-rpc/RVu7CT5J?version=latest"},"https://documenter.getpostman.com/view/4117254/ethereum-json-rpc/RVu7CT5J?version=latest")),(0,a.kt)("h2",{id:"smart-contracts"},"Smart Contracts"),(0,a.kt)("p",null,"Smart contracts development with BAS enables you to build your smart contracts for any use, including cryptocurrency exchanges, smart contract-based dApps, Decentralized Finance, and more.\nSmart contracts are programming logic that are executed automatically when a certain condition(s) are met. In BAS, smart contracts can be written in Solidity programming language.\nPlease refer to the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.soliditylang.org/"},"official documentation of Solidity")," for any queries."),(0,a.kt)("h2",{id:"ide-and-libraries"},"IDE and Libraries"),(0,a.kt)("p",null,"Multiple IDEs and libraries can be used for developing and deploying smart contracts."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://remix.ethereum.org/"},"Remix IDE"),": powerful open-source tool that helps you write Solidity contracts straight from the browser. It is written in JavaScript and supports both usages in the browser, but runs locally and in a desktop version. Remix IDE has modules for testing, debugging, deploying smart contracts, and much more.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://www.trufflesuite.com/docs/teams/quickstart"},"Truffle"),": development tool that allows users to compile, test, debug and deploy smart contracts.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://web3js.readthedocs.io/en/v1.2.11/"},"Web3JS"),": collection of libraries that allow you to interact with a local or remote Ethereum node using HTTP, IPC, or WebSocket."))),(0,a.kt)("h2",{id:"faucet"},"Faucet"),(0,a.kt)("p",null,"To get test BAS Tokens, developers can use the ",(0,a.kt)("a",{parentName:"p",href:"https://faucet-bas-testnet.ankr.com/"},"faucet"),"."),(0,a.kt)("h2",{id:"explorer"},"Explorer"),(0,a.kt)("p",null,"View blocks and transactions on ",(0,a.kt)("a",{parentName:"p",href:"https://explorer.dev-01.bas.ankr.com/"},"BAS Aries Explorer"),"."))}d.isMDXComponent=!0}}]);