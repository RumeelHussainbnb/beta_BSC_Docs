"use strict";(self.webpackChunkbeta_BNB_Docs=self.webpackChunkbeta_BNB_Docs||[]).push([[5614],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),u=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(i.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(t),m=r,k=d["".concat(i,".").concat(m)]||d[m]||c[m]||l;return t?a.createElement(k,o(o({ref:n},p),{},{components:t})):a.createElement(k,o({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=d;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var u=2;u<l;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},50851:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var a=t(87462),r=t(63366),l=(t(67294),t(3905)),o=["components"],s={},i="Node RPC",u={unversionedId:"beaconchain/develop/api-reference/node-rpc",id:"beaconchain/develop/api-reference/node-rpc",isDocsHomePage:!1,title:"Node RPC",description:"RPC endpoints may be used to interact with a node directly over HTTP or websockets. Using RPC, you may perform low-level operations like executing ABCI queries, viewing network/consensus state or broadcasting a transaction.",source:"@site/docs/beaconchain/develop/api-reference/node-rpc.md",sourceDirName:"beaconchain/develop/api-reference",slug:"/beaconchain/develop/api-reference/node-rpc",permalink:"/docs/beaconchain/develop/api-reference/node-rpc",editUrl:"https://github.com/bnb-chain/bnb-chain.github.io/blob/master/docs/beaconchain/develop/api-reference/node-rpc.md",tags:[],version:"current",frontMatter:{},sidebar:"bscSideBar",previous:{title:"WebSocket Streams",permalink:"/docs/beaconchain/develop/api-reference/dex-api/ws-streams"},next:{title:"CHANGELOG",permalink:"/docs/beaconchain/changelog"}},p=[{value:"1. Connecting",id:"1-connecting",children:[{value:"1.1 Use your own local node",id:"11-use-your-own-local-node",children:[],level:3},{value:"1.2 Use an existing node on the network",id:"12-use-an-existing-node-on-the-network",children:[],level:3}],level:2},{value:"2. Protocols",id:"2-protocols",children:[],level:2},{value:"3. Configuration",id:"3-configuration",children:[],level:2},{value:"4. Arguments",id:"4-arguments",children:[{value:"4.1 URI/HTTP",id:"41-urihttp",children:[],level:3},{value:"4.2 JSONRPC/HTTP",id:"42-jsonrpchttp",children:[],level:3},{value:"4.3 JSONRPC/websockets",id:"43-jsonrpcwebsockets",children:[],level:3}],level:2},{value:"5. RPC Endpoint List",id:"5-rpc-endpoint-list",children:[],level:2},{value:"6. APIs",id:"6-apis",children:[{value:"6.1 Query APIs",id:"61-query-apis",children:[{value:"6.1.1 Query ABCIInfo",id:"611-query-abciinfo",children:[],level:4},{value:"6.1.2 Query ConsensusState",id:"612-query-consensusstate",children:[],level:4},{value:"6.1.3 Query DumpConsensusState",id:"613-query-dumpconsensusstate",children:[],level:4},{value:"6.1.4 Query NetInfo",id:"614-query-netinfo",children:[],level:4},{value:"6.1.5 Query Genesis File",id:"615-query-genesis-file",children:[],level:4},{value:"6.1.6 Query Health",id:"616-query-health",children:[],level:4},{value:"6.1.7 Query NumUnconfirmedTxs",id:"617-query-numunconfirmedtxs",children:[],level:4},{value:"6.1.8 Query Status",id:"618-query-status",children:[],level:4},{value:"6.1.9 ABCIQuery",id:"619-abciquery",children:[],level:4},{value:"6.1.10  Query Block",id:"6110--query-block",children:[],level:4},{value:"6.1.11 Query BlockResults",id:"6111-query-blockresults",children:[],level:4},{value:"6.1.12 Query BlockchainInfo",id:"6112-query-blockchaininfo",children:[],level:4},{value:"6.1.13 Query Commit",id:"6113-query-commit",children:[],level:4},{value:"6.1.14 Query Tx",id:"6114-query-tx",children:[],level:4},{value:"6.1.15 Query TxSearch",id:"6115-query-txsearch",children:[],level:4}],level:3},{value:"6.2 Tx APIs",id:"62-tx-apis",children:[{value:"6.2.1 BroadcastTxAsync",id:"621-broadcasttxasync",children:[],level:4},{value:"6.2.2 BroadcastTxCommit",id:"622-broadcasttxcommit",children:[],level:4},{value:"6.2.3 BroadcastTxSync",id:"623-broadcasttxsync",children:[],level:4}],level:3},{value:"6.3 Websocket APIs",id:"63-websocket-apis",children:[{value:"6.3.1 Subscribe",id:"631-subscribe",children:[],level:4},{value:"6.3.2 Unsubscribe",id:"632-unsubscribe",children:[],level:4},{value:"6.3.3 UnsubscribeAll",id:"633-unsubscribeall",children:[],level:4}],level:3}],level:2}],c={toc:p};function d(e){var n=e.components,t=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"node-rpc"},"Node RPC"),(0,l.kt)("p",null,"RPC endpoints may be used to interact with a node directly over HTTP or websockets. Using RPC, you may perform low-level operations like executing ABCI queries, viewing network/consensus state or broadcasting a transaction."),(0,l.kt)("h2",{id:"1-connecting"},"1. Connecting"),(0,l.kt)("p",null,"There are two main ways to connect to a node to send RPC commands."),(0,l.kt)("h3",{id:"11-use-your-own-local-node"},"1.1 Use your own local node"),(0,l.kt)("p",null,"This page assumes that you have your own node running locally, so examples here use ",(0,l.kt)("inlineCode",{parentName:"p"},"localhost:27146")," to represent using RPC commands on a local node."),(0,l.kt)("p",null,"Alternatively, you are able to use a node that is hosted in the Binance Chain network."),(0,l.kt)("h3",{id:"12-use-an-existing-node-on-the-network"},"1.2 Use an existing node on the network"),(0,l.kt)("p",null,'The Binance Chain infrastructure deployment contains so-called "data seed" nodes, which have their RPC ports available for access. To find a seed node that is available, you can use the ',(0,l.kt)("a",{parentName:"p",href:"/docs/beaconchain/develop/api-reference/dex-api/paths#apiv1peers"},"peers")," endpoint to get a list of network peers."),(0,l.kt)("p",null,"Here is an example of a node that is available for RPC access. The following is the output of ",(0,l.kt)("inlineCode",{parentName:"p"},"localhost:27147/status"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": "",\n  "result": {\n    "node_info": {\n      "protocol_version": {\n        "p2p": "7",\n        "block": "10",\n        "app": "0"\n      },\n      "id": "7156d461742e2a1e569fd68426009c4194830c93",\n      "listen_addr": "aa841c226243a11e9a951063f6065739-eee556e439dc6a3b.elb.ap-northeast-1.amazonaws.com:27146",\n      "network": "Binance-Chain-Ganges",\n      "version": "0.30.1",\n      "channels": "354020212223303800",\n      "moniker": "data-seed-2",\n      "other": {\n        "tx_index": "on",\n        "rpc_address": "tcp://0.0.0.0:27147"\n      }\n    },\n    "sync_info": {\n      "latest_block_hash": "724AD02BE3216B7DD28B60F526C79E43D41C5E0AD6554C3390CA905A736593AE",\n      "latest_app_hash": "1A2F316DB23C06FD897B680823145183A2DF9C64D05C0038F37B066567130F70",\n      "latest_block_height": "7806468",\n      "latest_block_time": "2019-04-12T11:21:50.410854479Z",\n      "catching_up": false\n    },\n    "validator_info": {\n      "address": "32B88CEB9CE3EF1EABB840EC1556A5B4A5FD7FDB",\n      "pub_key": {\n        "type": "tendermint/PubKeyEd25519",\n        "value": "jAXPwM0xV1iwn7XJz6H0Zk8RxgELUAfjStxzIYKxaEk="\n      },\n      "voting_power": "0"\n    }\n  }\n}\n')),(0,l.kt)("p",null,"So, using this node, we are able to use raw RPC commands below or the ",(0,l.kt)("inlineCode",{parentName:"p"},"bnbcli")," tool to make a query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ bnbcli dex show -l NNB-0AB_BNB --chain-id Binance-Chain-Ganges --node data-seed-pre-2-s1.binance.org:80\n")),(0,l.kt)("h2",{id:"2-protocols"},"2. Protocols"),(0,l.kt)("p",null,"The following RPC protocols are supported:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"URI over HTTP"),(0,l.kt)("li",{parentName:"ul"},"JSONRPC over HTTP"),(0,l.kt)("li",{parentName:"ul"},"JSONRPC over websockets")),(0,l.kt)("p",null,"RPC is built using Tendermint's RPC library which contains its own set of documentation and tests.\nSee it here: ",(0,l.kt)("a",{href:"https://github.com/tendermint/tendermint/tree/master/rpc/lib"},(0,l.kt)("a",{parentName:"p",href:"https://github.com/tendermint/tendermint/tree/master/rpc/lib"},"https://github.com/tendermint/tendermint/tree/master/rpc/lib"))),(0,l.kt)("h2",{id:"3-configuration"},"3. Configuration"),(0,l.kt)("p",null,"RPC can be configured by tuning parameters under ",(0,l.kt)("inlineCode",{parentName:"p"},"[rpc]")," table in the ",(0,l.kt)("inlineCode",{parentName:"p"},"$TMHOME/config/config.toml")," file or by using the ",(0,l.kt)("inlineCode",{parentName:"p"},"--rpc.X")," command-line flags."),(0,l.kt)("p",null,"Default rpc listen address is ",(0,l.kt)("inlineCode",{parentName:"p"},"tcp://0.0.0.0:27147"),". To set another address, set the ",(0,l.kt)("inlineCode",{parentName:"p"},"laddr")," config parameter to a desired value.\nCORS (Cross-Origin Resource Sharing) can be enabled by setting the ",(0,l.kt)("inlineCode",{parentName:"p"},"cors_allowed_origins"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"cors_allowed_methods"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"cors_allowed_headers")," config parameters."),(0,l.kt)("h2",{id:"4-arguments"},"4. Arguments"),(0,l.kt)("p",null,"Arguments which expect strings or byte arrays may be passed as quoted strings, like ",(0,l.kt)("inlineCode",{parentName:"p"},'"abc"')," or as ",(0,l.kt)("inlineCode",{parentName:"p"},"0x"),"-prefixed strings, like ",(0,l.kt)("inlineCode",{parentName:"p"},"0x616263"),"."),(0,l.kt)("p",null,"If you plan to call ",(0,l.kt)("inlineCode",{parentName:"p"},"broadcast")," functions with rest, you can generate the transaction hex output by adding a ",(0,l.kt)("inlineCode",{parentName:"p"},"--dry")," flag to your command. For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"bnbcli send --from XXX --to bnb1XXXXXXXXXXXXXXXX --amount 1:BNB --chain-id Binance-Chain-Tigris --node https://dataseed5.defibit.io:443 --json --memo \"Test transfer\" --dry --offline\nPassword to sign with 'guest':\nTransaction hash: 3592BB385569BBFE346907365CFAED9341B85BAD2920B5E0B174484ECA3CD16C, Transaction hex: c701f0625dee0a462a2c87fa0a1f0a1441462c3f2a924f94c4012f4c7bbc3b0ed9213b6b12070a03424e421002121f0a14ade844d9f3a577086211bc93c0c306540b94bb4a12070a03424e421002126a0a26eb5ae987210381a2a87abf9fdd30512b9f40e9ed88516f2ef96a00ed02754a78793bf73f97b81240c926d1d93ea89730836f186a88fbe3b3719d516b8f849d414c38fc9d906ac77b7bb460f2f36564b74317aa0e3e6d9570db07763760effec15a5c600e5fb671041a0d54657374207472616e73666572\n")),(0,l.kt)("h3",{id:"41-urihttp"},"4.1 URI/HTTP"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl 'localhost:27147/broadcast_tx_sync?tx=0xdb01f0625dee0a63ce6dc0430a14813e4939f1567b219704ffc2ad4df58bde010879122b383133453439333946313536374232313937303446464332414434444635384244453031303837392d34331a0d5a454252412d3136445f424e422002280130c0843d38904e400112700a26eb5ae9872102139bdd95de72c22ac2a2b0f87853b1cca2e8adf9c58a4a689c75d3263013441a1240598c3a74dc08d82d97668ed3523a105a2afb752c5be34d09fb5f3158d55db2f545a2466263cf80f02d1184dd50efc4d8a636a262909a632ebeddeaa426c092b218d2e518202a'\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Response:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": "",\n    "result": {\n        "code": 0,\n        "data": "7B226F726465725F6964223A22383133453439333946313536374232313937303446464332414434444635384244453031303837392D3433227D",\n        "log": "Msg 0: ",\n        "hash": "AB1B84C7C0B0B195941DCE9CFE1A54214B72D5DB54AD388D8B146A6B62911E8E"\n    }\n}\n')),(0,l.kt)("h3",{id:"42-jsonrpchttp"},"4.2 JSONRPC/HTTP"),(0,l.kt)("p",null,"JSONRPC requests can be POST'd to the root RPC endpoint via HTTP (e.g. ",(0,l.kt)("a",{href:"http://localhost:27147/"},"http://localhost:27147/"),")."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "method": "broadcast_tx_sync",\n  "jsonrpc": "2.0",\n  "params": [\n    "abc"\n  ],\n  "id": "dontcare"\n}\n')),(0,l.kt)("h3",{id:"43-jsonrpcwebsockets"},"4.3 JSONRPC/websockets"),(0,l.kt)("p",null,"JSONRPC requests can be made via websocket. The websocket endpoint is at ",(0,l.kt)("inlineCode",{parentName:"p"},"/websocket"),", e.g. ",(0,l.kt)("inlineCode",{parentName:"p"},"localhost:27147/websocket"),".  Asynchronous RPC functions like event ",(0,l.kt)("inlineCode",{parentName:"p"},"subscribe")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"unsubscribe")," are only available via websockets."),(0,l.kt)("h2",{id:"5-rpc-endpoint-list"},"5. RPC Endpoint List"),(0,l.kt)("p",null,"An HTTP Get request to the root RPC endpoint shows a list of available endpoints."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl 'localhost:27147'\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Response:")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Available endpoints that don't require arguments:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain"},"/abci_info\n/consensus_state\n/dump_consensus_state\n/genesis\n/health\n/net_info\n/num_unconfirmed_txs\n/status\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Endpoints that require arguments:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain"},"/abci_query?path=_&data=_&prove=_\n/block?height=_\n/block_result?height=_\n/blockchain?minHeight=_&maxHeight=_\n/broadcast_tx_async?tx=_\n/broadcast_tx_commit?tx=_\n/broadcast_tx_sync?tx=_\n/commit?height=_\n/consensus_params?height=_\n/dial_seeds?seeds=_\n/dial_persistent_peers?persistent_peers=_\n/subscribe?query=_\n/tx?hash=_&prove=_\n/tx_search?query=_&prove=_&page=_&per_page=_\n/unconfirmed_txs?limit=_\n/unsubscribe?query=_\n/unsubscribe_all?\n/validators?height=_\n")),(0,l.kt)("h2",{id:"6-apis"},"6. APIs"),(0,l.kt)("h3",{id:"61-query-apis"},"6.1 Query APIs"),(0,l.kt)("h4",{id:"611-query-abciinfo"},"6.1.1 Query ABCIInfo"),(0,l.kt)("p",null,"Get some info about the application.\n",(0,l.kt)("strong",{parentName:"p"},"Return Type:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"type ResponseInfo struct {\n    Data                 string\n    Version              string\n    AppVersion           uint64\n    LastBlockHeight      int64\n    LastBlockAppHash     []byte\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'localhost:27147/abci_info'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n    // handle error\n}\ndefer client.Stop()\ninfo, err := client.ABCIInfo()\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The above command returns JSON structured like this:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": "",\n    "result": {\n        "response": {\n            "data": "BNBChain",\n            "last_block_height": "7579978",\n            "last_block_app_hash": "92HKpxrNKqYkzSRj49FI+PjzVx7oirnYrwhMzG0CRDg="\n        }\n    }\n}\n')),(0,l.kt)("h4",{id:"612-query-consensusstate"},"6.1.2 Query ConsensusState"),(0,l.kt)("p",null,"ConsensusState returns a concise summary of the consensus state. This is just a snapshot of consensus state, and it will not persist."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return Parameters"),"\nreturn round states"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"type ResultConsensusState struct {\n    RoundState json.RawMessage `\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'localhost:27147/consensus_state'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n\n    // handle error\n\n}\ndefer client.Stop()\nstate, err := client.ConsensusState()\n')),(0,l.kt)("p",null,"The above command returns JSON structured like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": "",\n    "result": {\n      "round_state": {\n        "height/round/step": "9336/0/1",\n        "start_time": "2018-05-14T10:25:45.72595357-04:00",\n        "proposal_block_hash": "",\n        "locked_block_hash": "",\n        "valid_block_hash": "",\n        "height_vote_set": [\n          {\n            "round": "0",\n            "prevotes": [\n              "nil-Vote"\n            ],\n            "prevotes_bit_array": "BA{1:_} 0/10 = 0.00",\n            "precommits": [\n              "nil-Vote"\n            ],\n            "precommits_bit_array": "BA{1:_} 0/10 = 0.00"\n          }\n        ]\n      }\n    }\n}\n')),(0,l.kt)("h4",{id:"613-query-dumpconsensusstate"},"6.1.3 Query DumpConsensusState"),(0,l.kt)("p",null,"DumpConsensusState dumps consensus state. This is just a snapshot of consensus state, and it will not persist."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return Parameters"),"\nreturn round states"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"type ResultConsensusState struct {\n    RoundState json.RawMessage `\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'localhost:27147/dump_consensus_state'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n\n    // handle error\n\n}\ndefer client.Stop()\nstate, err := client.DumpConsensusState()\n')),(0,l.kt)("p",null,"The above command returns JSON structured like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": "",\n    "result": {\n      "round_state": {\n        "height": "7185",\n        "round": "0",\n        "step": "1",\n        "start_time": "2018-05-12T13:57:28.440293621-07:00",\n        "commit_time": "2018-05-12T13:57:27.440293621-07:00",\n        "validators": {\n          "validators": [\n            {\n              "address": "B5B3D40BE53982AD294EF99FF5A34C0C3E5A3244",\n              "pub_key": {\n                "type": "tendermint/PubKeyEd25519",\n                "value": "SBctdhRBcXtBgdI/8a/alTsUhGXqGs9k5ylV1u5iKHg="\n              },\n              "voting_power": "10",\n              "proposer_priority": "0"\n            }\n          ],\n          "proposer": {\n            "address": "B5B3D40BE53982AD294EF99FF5A34C0C3E5A3244",\n            "pub_key": {\n              "type": "tendermint/PubKeyEd25519",\n              "value": "SBctdhRBcXtBgdI/8a/alTsUhGXqGs9k5ylV1u5iKHg="\n            },\n            "voting_power": "10",\n            "proposer_priority": "0"\n          }\n        },\n        "proposal": null,\n        "proposal_block": null,\n        "proposal_block_parts": null,\n        "locked_round": "0",\n        "locked_block": null,\n        "locked_block_parts": null,\n        "valid_round": "0",\n        "valid_block": null,\n        "valid_block_parts": null,\n        "votes": [\n          {\n            "round": "0",\n            "prevotes": "_",\n            "precommits": "_"\n          }\n        ],\n        "commit_round": "-1",\n        "last_commit": {\n          "votes": [\n            "Vote{0:B5B3D40BE539 7184/00/2(Precommit) 14F946FA7EF0 /702B1B1A602A.../ @ 2018-05-12T20:57:27.342Z}"\n          ],\n          "votes_bit_array": "x",\n          "peer_maj_23s": {}\n        },\n        "last_validators": {\n          "validators": [\n            {\n              "address": "B5B3D40BE53982AD294EF99FF5A34C0C3E5A3244",\n              "pub_key": {\n                "type": "tendermint/PubKeyEd25519",\n                "value": "SBctdhRBcXtBgdI/8a/alTsUhGXqGs9k5ylV1u5iKHg="\n              },\n              "voting_power": "10",\n              "proposer_priority": "0"\n            }\n          ],\n          "proposer": {\n            "address": "B5B3D40BE53982AD294EF99FF5A34C0C3E5A3244",\n            "pub_key": {\n              "type": "tendermint/PubKeyEd25519",\n              "value": "SBctdhRBcXtBgdI/8a/alTsUhGXqGs9k5ylV1u5iKHg="\n            },\n            "voting_power": "10",\n            "proposer_priority": "0"\n          }\n        }\n      },\n      "peers": [\n        {\n          "node_address": "30ad1854af22506383c3f0e57fb3c7f90984c5e8@172.16.63.221:27146",\n          "peer_state": {\n            "round_state": {\n              "height": "7185",\n              "round": "0",\n              "step": "1",\n              "start_time": "2018-05-12T13:57:27.438039872-07:00",\n              "proposal": false,\n              "proposal_block_parts_header": {\n                "total": "0",\n                "hash": ""\n              },\n              "proposal_block_parts": null,\n              "proposal_pol_round": "-1",\n              "proposal_pol": "_",\n              "prevotes": "_",\n              "precommits": "_",\n              "last_commit_round": "0",\n              "last_commit": "x",\n              "catchup_commit_round": "-1",\n              "catchup_commit": "_"\n            },\n            "stats": {\n              "last_vote_height": "7184",\n              "votes": "255",\n              "last_block_part_height": "7184",\n              "block_parts": "255"\n            }\n          }\n        }\n      ]\n    }\n\n}\n')),(0,l.kt)("h4",{id:"614-query-netinfo"},"6.1.4 Query NetInfo"),(0,l.kt)("p",null,"Get network info."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return Parameters")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'// Info about peer connections\ntype ResultNetInfo struct {\n    Listening bool     `json:"listening"`\n    Listeners []string `json:"listeners"`\n    NPeers    int      `json:"n_peers"`\n    Peers     []Peer   `json:"peers"`\n}\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'localhost:27147/net_info'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n    // handle error\n\n}\ndefer client.Stop()\ninfo, err := client.NetInfo()\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The above command returns JSON structured like this:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": "",\n  "result": {\n    "listening": true,\n    "listeners": [\n      "Listener(@aa841c226243a11e9a951063f6065739-eee556e439dc6a3b.elb.ap-northeast-1.amazonaws.com:27146)"\n    ],\n    "n_peers": "5",\n    "peers": [\n      {\n        "node_info": {\n          "protocol_version": {\n            "p2p": "7",\n            "block": "10",\n            "app": "0"\n          },\n          "id": "9612b570bffebecca4776cb4512d08e252119005",\n          "listen_addr": "a0b88b324243a11e994280efee3352a7-96b6996626c6481d.elb.ap-northeast-1.amazonaws.com:27146",\n          "network": "Binance-Chain-Ganges",\n          "version": "0.30.1",\n          "channels": "354020212223303800",\n          "moniker": "data-seed-0",\n          "other": {\n            "tx_index": "on",\n            "rpc_address": "tcp://0.0.0.0:27147"\n          }\n        },\n        "is_outbound": false,\n        "connection_status": {\n          "Duration": "188759697464282",\n          "SendMonitor": {\n            "Active": true,\n            "Start": "2019-04-10T06:57:12.6Z",\n            "Duration": "188759640000000",\n            "Idle": "20000000",\n            "Bytes": "3117641165",\n            "Samples": "1219583",\n            "InstRate": "1945",\n            "CurRate": "13732",\n            "AvgRate": "16516",\n            "PeakRate": "111020",\n            "BytesRem": "0",\n            "TimeRem": "0",\n            "Progress": 0\n          },\n          "RecvMonitor": {\n            "Active": true,\n            "Start": "2019-04-10T06:57:12.6Z",\n            "Duration": "188759640000000",\n            "Idle": "0",\n            "Bytes": "3009295340",\n            "Samples": "1210143",\n            "InstRate": "4819",\n            "CurRate": "16115",\n            "AvgRate": "15942",\n            "PeakRate": "142490",\n            "BytesRem": "0",\n            "TimeRem": "0",\n            "Progress": 0\n          },\n          "Channels": [\n            {\n              "ID": 48,\n              "SendQueueCapacity": "1",\n              "SendQueueSize": "0",\n              "Priority": "5",\n              "RecentlySent": "0"\n            },\n            {\n              "ID": 64,\n              "SendQueueCapacity": "1000",\n              "SendQueueSize": "0",\n              "Priority": "10",\n              "RecentlySent": "0"\n            },\n            {\n              "ID": 32,\n              "SendQueueCapacity": "100",\n              "SendQueueSize": "0",\n              "Priority": "5",\n              "RecentlySent": "16419"\n            },\n            {\n              "ID": 33,\n              "SendQueueCapacity": "100",\n              "SendQueueSize": "0",\n              "Priority": "10",\n              "RecentlySent": "45842"\n            },\n            {\n              "ID": 34,\n              "SendQueueCapacity": "100",\n              "SendQueueSize": "0",\n              "Priority": "5",\n              "RecentlySent": "70619"\n            },\n            {\n              "ID": 35,\n              "SendQueueCapacity": "2",\n              "SendQueueSize": "0",\n              "Priority": "1",\n              "RecentlySent": "19"\n            },\n            {\n              "ID": 56,\n              "SendQueueCapacity": "1",\n              "SendQueueSize": "0",\n              "Priority": "5",\n              "RecentlySent": "0"\n            },\n            {\n              "ID": 0,\n              "SendQueueCapacity": "10",\n              "SendQueueSize": "0",\n              "Priority": "1",\n              "RecentlySent": "0"\n            }\n          ]\n        },\n        "remote_ip": "10.201.41.12"\n      }\n    ]\n  }\n}\n')),(0,l.kt)("h4",{id:"615-query-genesis-file"},"6.1.5 Query Genesis File"),(0,l.kt)("p",null,"Get genesis file."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return Parameters")),(0,l.kt)("p",null,"return round states"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"// Genesis file\ntype ResultGenesis struct {\n    Genesis *types.GenesisDoc\n}\n// GenesisDoc defines the initial conditions for a tendermint blockchain, in particular its validator set.\ntype GenesisDoc struct {\n    GenesisTime     time.Time\n    ChainID         string\n    ConsensusParams *ConsensusParams\n    Validators      []GenesisValidator\n    AppHash         cmn.HexBytes\n    AppState        json.RawMessage\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'localhost:27147/genesis'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n\n    // handle error\n\n}\ndefer client.Stop()\ngenesis, err := client.Genesis()\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The above command returns JSON structured like this:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": "",\n  "result": {\n    "genesis": {\n      "genesis_time": "2019-03-07T01:52:07.500913003Z",\n      "chain_id": "Binance-Chain-Ganges",\n      "consensus_params": {\n        "block_size": {\n          "max_bytes": "1048576",\n          "max_gas": "-1"\n        },\n        "evidence": {\n          "max_age": "100000"\n        },\n        "validator": {\n          "pub_key_types": [\n            "ed25519"\n          ]\n        }\n      },\n      "app_hash": "",\n      "app_state": {\n        "tokens": [\n          {\n            "name": "Binance Chain Native Token",\n            "symbol": "BNB",\n            "total_supply": "20000000000000000",\n            "owner": "tbnb12hlquylu78cjylk5zshxpdj6hf3t0tahwjt3ex",\n            "mintable": false\n          }\n        ],\n        "accounts": [\n          {\n            "name": "Fuji",\n            "address": "tbnb12hlquylu78cjylk5zshxpdj6hf3t0tahwjt3ex",\n            "valaddr": "7B343E041CA130000A8BC00C35152BD7E7740037"\n          },\n          {\n            "name": "Kita",\n            "address": "tbnb167yp9jkv6uaqnyq62gfkx82xmfny0cl9xe04zj",\n            "valaddr": "E0DD72609CC106210D1AA13936CB67B93A0AEE21"\n          },\n          {\n            "name": "Everest",\n            "address": "tbnb1earfwcjre04hp7phqnkw8ts04tkumdn0cyzun0",\n            "valaddr": "FC3108DC3814888F4187452182BC1BAF83B71BC9"\n          },\n          {\n            "name": "Seoraksan",\n            "address": "tbnb1hexqyu3m8uuudqdnnpnsnlwe6xg0n3078lx68l",\n            "valaddr": "62633D9DB7ED78E951F79913FDC8231AA77EC12B"\n          },\n          {\n            "name": "Elbrus",\n            "address": "tbnb135mqtf9gef879nmjlpwz6u2fzqcw4qlzrqwgvw",\n            "valaddr": "B6F20C7FAA2B2F6F24518FA02B71CB5F4A09FBA3"\n          },\n          {\n            "name": "Ararat",\n            "address": "tbnb1q82g2h9q0kfe7sysnj5w7nlak92csfjztymp39",\n            "valaddr": "06FD60078EB4C2356137DD50036597DB267CF616"\n          },\n          {\n            "name": "Carrauntoohil",\n            "address": "tbnb183nch8pn3f698vurrqypq3s254slcane2t66aj",\n            "valaddr": "37EF19AF29679B368D2B9E9DE3F8769B35786676"\n          },\n          {\n            "name": "Scafell",\n            "address": "tbnb1r6l0c0fxu458hlq6m7amkcltj8nufyl9mr2wm5",\n            "valaddr": "18E69CC672973992BB5F76D049A5B2C5DDF77436"\n          },\n          {\n            "name": "Aconcagua",\n            "address": "tbnb193t8pkhm2sxw5uy5ypesygda8rzsk25ge3e9y7",\n            "valaddr": "344C39BB8F4512D6CAB1F6AAFAC1811EF9D8AFDF"\n          },\n          {\n            "name": "Zugspitze",\n            "address": "tbnb108drn8exhv72tp40e6lq9z949nnjj54yzqrr2f",\n            "valaddr": "91844D296BD8E591448EFC65FD6AD51A888D58FA"\n          },\n          {\n            "name": "Gahinga",\n            "address": "tbnb1vehecekrsks5sshcwvxyeyrd469j9wvcqm37yu",\n            "valaddr": "B3727172CE6473BC780298A2D66C12F1A14F5B2A"\n          }\n        ],\n        "dex": {},\n        "param": {\n          "fees": [\n            {\n              "type": "params/FixedFeeParams",\n              "value": {\n                "msg_type": "submit_proposal",\n                "fee": "1000000000",\n                "fee_for": 1\n              }\n            },\n            {\n              "type": "params/FixedFeeParams",\n              "value": {\n                "msg_type": "deposit",\n                "fee": "125000",\n                "fee_for": 1\n              }\n            },\n            {\n              "type": "params/FixedFeeParams",\n              "value": {\n                "msg_type": "vote",\n                "fee": "0",\n                "fee_for": 3\n              }\n            },\n            {\n              "type": "params/FixedFeeParams",\n              "value": {\n                "msg_type": "dexList",\n                "fee": "80000000000",\n                "fee_for": 2\n              }\n            },\n            {\n              "type": "params/FixedFeeParams",\n              "value": {\n                "msg_type": "orderNew",\n                "fee": "0",\n                "fee_for": 3\n              }\n            },\n            {\n              "type": "params/FixedFeeParams",\n              "value": {\n                "msg_type": "orderCancel",\n                "fee": "0",\n                "fee_for": 3\n              }\n            },\n            {\n              "type": "params/FixedFeeParams",\n              "value": {\n                "msg_type": "issueMsg",\n                "fee": "40000000000",\n                "fee_for": 2\n              }\n            },\n            {\n              "type": "params/FixedFeeParams",\n              "value": {\n                "msg_type": "mintMsg",\n                "fee": "20000000000",\n                "fee_for": 2\n              }\n            },\n            {\n              "type": "params/FixedFeeParams",\n              "value": {\n                "msg_type": "tokensBurn",\n                "fee": "100000000",\n                "fee_for": 1\n              }\n            },\n            {\n              "type": "params/FixedFeeParams",\n              "value": {\n                "msg_type": "tokensFreeze",\n                "fee": "1000000",\n                "fee_for": 1\n              }\n            },\n            {\n              "type": "params/TransferFeeParams",\n              "value": {\n                "fixed_fee_params": {\n                  "msg_type": "send",\n                  "fee": "125000",\n                  "fee_for": 1\n                },\n                "multi_transfer_fee": "100000",\n                "lower_limit_as_multi": "2"\n              }\n            },\n            {\n              "type": "params/DexFeeParam",\n              "value": {\n                "dex_fee_fields": [\n                  {\n                    "fee_name": "ExpireFee",\n                    "fee_value": "100000"\n                  },\n                  {\n                    "fee_name": "ExpireFeeNative",\n                    "fee_value": "20000"\n                  },\n                  {\n                    "fee_name": "CancelFee",\n                    "fee_value": "100000"\n                  },\n                  {\n                    "fee_name": "CancelFeeNative",\n                    "fee_value": "20000"\n                  },\n                  {\n                    "fee_name": "FeeRate",\n                    "fee_value": "1000"\n                  },\n                  {\n                    "fee_name": "FeeRateNative",\n                    "fee_value": "400"\n                  },\n                  {\n                    "fee_name": "IOCExpireFee",\n                    "fee_value": "50000"\n                  },\n                  {\n                    "fee_name": "IOCExpireFeeNative",\n                    "fee_value": "10000"\n                  }\n                ]\n              }\n            }\n          ]\n        },\n        "stake": {\n          "pool": {\n            "loose_tokens": "4000000000000000",\n            "bonded_tokens": "0"\n          },\n          "params": {\n            "unbonding_time": "604800000000000",\n            "max_validators": 15,\n            "bond_denom": "BNB"\n          },\n          "validators": null,\n          "bonds": null\n        },\n        "gov": {\n          "starting_proposalID": "1",\n          "deposit_period": {\n            "min_deposit": [\n              {\n                "denom": "BNB",\n                "amount": "200000000000"\n              }\n            ],\n            "max_deposit_period": "1209600000000000"\n          },\n          "voting_period": {\n            "voting_period": "14400000000000"\n          },\n          "tallying_procedure": {\n            "threshold": "50000000",\n            "veto": "33400000",\n            "governance_penalty": "1000000"\n          }\n        },\n        "gentxs": [\n          {\n            "type": "auth/StdTx",\n            "value": {\n              "msg": [\n                {\n                  "type": "cosmos-sdk/MsgCreateValidatorProposal",\n                  "value": {\n                    "MsgCreateValidator": {\n                      "Description": {\n                        "moniker": "Fuji",\n                        "identity": "",\n                        "website": "",\n                        "details": ""\n                      },\n                      "Commission": {\n                        "rate": "0",\n                        "max_rate": "0",\n                        "max_change_rate": "0"\n                      },\n                      "delegator_address": "tbnb12hlquylu78cjylk5zshxpdj6hf3t0tahwjt3ex",\n                      "validator_address": "bva12hlquylu78cjylk5zshxpdj6hf3t0tahqmr98n",\n                      "pubkey": {\n                        "type": "tendermint/PubKeyEd25519",\n                        "value": "Sl1HU+t5+S6A7+It96yk9mak9Ev4HFNsSgnUucW2VLU="\n                      },\n                      "delegation": {\n                        "denom": "BNB",\n                        "amount": "100000000000"\n                      }\n                    },\n                    "proposal_id": "0"\n                  }\n                }\n              ],\n              "signatures": [\n                {\n                  "pub_key": {\n                    "type": "tendermint/PubKeySecp256k1",\n                    "value": "A+gcCBsoefY1d9TnkIOPV8IX5+/i/BTrMvFU7vG9RXIk"\n                  },\n                  "signature": "oWWGy2kN9yQDVJ/aLE7N/Si/lTTsce3k8VRsdtzO6doSw2eFL9v8wB3GdTaOBvuJGJti73WPGaEN8fbUjao5hw==",\n                  "account_number": "0",\n                  "sequence": "0"\n                }\n              ],\n              "memo": "1bca643058c56f9c20ebaaad1739522ee7d11cd6@172.18.10.204:26656",\n              "source": "0",\n              "data": null\n            }\n          },\n          {\n            "type": "auth/StdTx",\n            "value": {\n              "msg": [\n                {\n                  "type": "cosmos-sdk/MsgCreateValidatorProposal",\n                  "value": {\n                    "MsgCreateValidator": {\n                      "Description": {\n                        "moniker": "Kita",\n                        "identity": "",\n                        "website": "",\n                        "details": ""\n                      },\n                      "Commission": {\n                        "rate": "0",\n                        "max_rate": "0",\n                        "max_change_rate": "0"\n                      },\n                      "delegator_address": "tbnb167yp9jkv6uaqnyq62gfkx82xmfny0cl9xe04zj",\n                      "validator_address": "bva167yp9jkv6uaqnyq62gfkx82xmfny0cl9gs8pu8",\n                      "pubkey": {\n                        "type": "tendermint/PubKeyEd25519",\n                        "value": "BCJDOWiPAS5kneSOJBiACS6qj2qg9PFL/Pngx2kXwLY="\n                      },\n                      "delegation": {\n                        "denom": "BNB",\n                        "amount": "100000000000"\n                      }\n                    },\n                    "proposal_id": "0"\n                  }\n                }\n              ],\n              "signatures": [\n                {\n                  "pub_key": {\n                    "type": "tendermint/PubKeySecp256k1",\n                    "value": "Axu55ox7sJ1YsxZsdtUGU7Is5xCzEfs0rT5nQ1JnCkuh"\n                  },\n                  "signature": "Mnvxh3LIiclOLlIN1N1vrOA7igL6pdo5EwKT/JzwQbNAPLQA9CgArrMaH+GW+m+wjxEezCDC9tDqe3KB0NwI1w==",\n                  "account_number": "0",\n                  "sequence": "0"\n                }\n              ],\n              "memo": "7bbe02b44f45fb8f73981c13bb21b19b30e2658d@172.18.10.205:26656",\n              "source": "0",\n              "data": null\n            }\n          },\n          {\n            "type": "auth/StdTx",\n            "value": {\n              "msg": [\n                {\n                  "type": "cosmos-sdk/MsgCreateValidatorProposal",\n                  "value": {\n                    "MsgCreateValidator": {\n                      "Description": {\n                        "moniker": "Everest",\n                        "identity": "",\n                        "website": "",\n                        "details": ""\n                      },\n                      "Commission": {\n                        "rate": "0",\n                        "max_rate": "0",\n                        "max_change_rate": "0"\n                      },\n                      "delegator_address": "tbnb1earfwcjre04hp7phqnkw8ts04tkumdn0cyzun0",\n                      "validator_address": "bva1earfwcjre04hp7phqnkw8ts04tkumdn0kd2gd6",\n                      "pubkey": {\n                        "type": "tendermint/PubKeyEd25519",\n                        "value": "QDSzfO2ooL8Tsauu7nqPk4NUIJmlVNIZuT0M5p45cOg="\n                      },\n                      "delegation": {\n                        "denom": "BNB",\n                        "amount": "100000000000"\n                      }\n                    },\n                    "proposal_id": "0"\n                  }\n                }\n              ],\n              "signatures": [\n                {\n                  "pub_key": {\n                    "type": "tendermint/PubKeySecp256k1",\n                    "value": "A7H2pGbdLT9YJQwlqNd3dWfq6fGs5Xk8v7h3Ckp+AU2e"\n                  },\n                  "signature": "8tLKWXxMc6HmOTovnRGD3i8xhX572wn3Kj8Kkd6ND9I/dOveZxfrvsmE6bXFRcyBvIXxFTSEef4fwuVKjNgWUw==",\n                  "account_number": "0",\n                  "sequence": "0"\n                }\n              ],\n              "memo": "0d46d1e6b1103d33765e209a7da0943156291fcb@172.18.10.206:26656",\n              "source": "0",\n              "data": null\n            }\n          },\n          {\n            "type": "auth/StdTx",\n            "value": {\n              "msg": [\n                {\n                  "type": "cosmos-sdk/MsgCreateValidatorProposal",\n                  "value": {\n                    "MsgCreateValidator": {\n                      "Description": {\n                        "moniker": "Seoraksan",\n                        "identity": "",\n                        "website": "",\n                        "details": ""\n                      },\n                      "Commission": {\n                        "rate": "0",\n                        "max_rate": "0",\n                        "max_change_rate": "0"\n                      },\n                      "delegator_address": "tbnb1hexqyu3m8uuudqdnnpnsnlwe6xg0n3078lx68l",\n                      "validator_address": "bva1hexqyu3m8uuudqdnnpnsnlwe6xg0n307fkwwe2",\n                      "pubkey": {\n                        "type": "tendermint/PubKeyEd25519",\n                        "value": "j0p0oHNRiV3fNzBXuY+ubfryzSHzegY+GWAQeP5HDVM="\n                      },\n                      "delegation": {\n                        "denom": "BNB",\n                        "amount": "100000000000"\n                      }\n                    },\n                    "proposal_id": "0"\n                  }\n                }\n              ],\n              "signatures": [\n                {\n                  "pub_key": {\n                    "type": "tendermint/PubKeySecp256k1",\n                    "value": "Aygd4/N9zvf/rKnWCMCqbt0O2pad5ZXyiPeBZgbhE7GV"\n                  },\n                  "signature": "d7g5NIda45dOpTT+k/rVOqXrxilPI1t6E0qT9YbTzVBKNSOb2uAWy2hlMt32bNIFW5W5/d7czFWnmqEaY/BQmg==",\n                  "account_number": "0",\n                  "sequence": "0"\n                }\n              ],\n              "memo": "64b29930674c02dd4a45968759173a3c546fb57c@172.18.10.207:26656",\n              "source": "0",\n              "data": null\n            }\n          },\n          {\n            "type": "auth/StdTx",\n            "value": {\n              "msg": [\n                {\n                  "type": "cosmos-sdk/MsgCreateValidatorProposal",\n                  "value": {\n                    "MsgCreateValidator": {\n                      "Description": {\n                        "moniker": "Elbrus",\n                        "identity": "",\n                        "website": "",\n                        "details": ""\n                      },\n                      "Commission": {\n                        "rate": "0",\n                        "max_rate": "0",\n                        "max_change_rate": "0"\n                      },\n                      "delegator_address": "tbnb135mqtf9gef879nmjlpwz6u2fzqcw4qlzrqwgvw",\n                      "validator_address": "bva135mqtf9gef879nmjlpwz6u2fzqcw4qlzdfxujm",\n                      "pubkey": {\n                        "type": "tendermint/PubKeyEd25519",\n                        "value": "SbKI5Ou7OigcLVRvwwJT1brwiZO25dKV+3h6WzFKKY4="\n                      },\n                      "delegation": {\n                        "denom": "BNB",\n                        "amount": "100000000000"\n                      }\n                    },\n                    "proposal_id": "0"\n                  }\n                }\n              ],\n              "signatures": [\n                {\n                  "pub_key": {\n                    "type": "tendermint/PubKeySecp256k1",\n                    "value": "A0130hq3qdHzfPUkU/ZQ4s2jynvhy7uOrtWnCpCmjasJ"\n                  },\n                  "signature": "NYgG1u8fayGSTStgwfioxDemDS+8H16DC7+s/DRD1rBannYUs8cUAn2Lfrqg0leRhhNrWGPgD4qQv9IU2Smh/w==",\n                  "account_number": "0",\n                  "sequence": "0"\n                }\n              ],\n              "memo": "7d290fae6845d53f7ffbb2aabc528b29650bee6c@172.18.10.208:26656",\n              "source": "0",\n              "data": null\n            }\n          },\n          {\n            "type": "auth/StdTx",\n            "value": {\n              "msg": [\n                {\n                  "type": "cosmos-sdk/MsgCreateValidatorProposal",\n                  "value": {\n                    "MsgCreateValidator": {\n                      "Description": {\n                        "moniker": "Ararat",\n                        "identity": "",\n                        "website": "",\n                        "details": ""\n                      },\n                      "Commission": {\n                        "rate": "0",\n                        "max_rate": "0",\n                        "max_change_rate": "0"\n                      },\n                      "delegator_address": "tbnb1q82g2h9q0kfe7sysnj5w7nlak92csfjztymp39",\n                      "validator_address": "bva1q82g2h9q0kfe7sysnj5w7nlak92csfjz9dn40s",\n                      "pubkey": {\n                        "type": "tendermint/PubKeyEd25519",\n                        "value": "4Xy+nCDNz9+HazsSl40yZKAH/KqnHEzbcB2evAMj9E8="\n                      },\n                      "delegation": {\n                        "denom": "BNB",\n                        "amount": "100000000000"\n                      }\n                    },\n                    "proposal_id": "0"\n                  }\n                }\n              ],\n              "signatures": [\n                {\n                  "pub_key": {\n                    "type": "tendermint/PubKeySecp256k1",\n                    "value": "AlG4f0se3Ok1EbsvzMtDIQsSGBslR+eqy9uSBIgXQToP"\n                  },\n                  "signature": "pMLebkHE2hnuHv+AjIdMdnm6G5kzheCFs+V1+NZV12p+yfK3T7UPy/2mDFVkmIUfwWaBtDHD//+G8eyvZDD5Ew==",\n                  "account_number": "0",\n                  "sequence": "0"\n                }\n              ],\n              "memo": "7cf465f3c351f9f0873be9a7396a5438208b9546@172.18.10.209:26656",\n              "source": "0",\n              "data": null\n            }\n          },\n          {\n            "type": "auth/StdTx",\n            "value": {\n              "msg": [\n                {\n                  "type": "cosmos-sdk/MsgCreateValidatorProposal",\n                  "value": {\n                    "MsgCreateValidator": {\n                      "Description": {\n                        "moniker": "Carrauntoohil",\n                        "identity": "",\n                        "website": "",\n                        "details": ""\n                      },\n                      "Commission": {\n                        "rate": "0",\n                        "max_rate": "0",\n                        "max_change_rate": "0"\n                      },\n                      "delegator_address": "tbnb183nch8pn3f698vurrqypq3s254slcane2t66aj",\n                      "validator_address": "bva183nch8pn3f698vurrqypq3s254slcaneyzjwr8",\n                      "pubkey": {\n                        "type": "tendermint/PubKeyEd25519",\n                        "value": "vQPen4qynigACU4VP6xvaWz6USU2ycL4BNyywsTkrtY="\n                      },\n                      "delegation": {\n                        "denom": "BNB",\n                        "amount": "100000000000"\n                      }\n                    },\n                    "proposal_id": "0"\n                  }\n                }\n              ],\n              "signatures": [\n                {\n                  "pub_key": {\n                    "type": "tendermint/PubKeySecp256k1",\n                    "value": "A6+/HDC0uLx/9Z5N+Gc+qWOIUaRpKsZYoDlRb41EUryy"\n                  },\n                  "signature": "BRG3lQeEWiamvVHnf30YeFqsK+TIt0qfYhLhSZnyYwh4b3AwsHQcTzFfr/wezfDa7C/OnxinngXXCAy5zLAhPg==",\n                  "account_number": "0",\n                  "sequence": "0"\n                }\n              ],\n              "memo": "32769f58a63d25e4a0b9d793ce80626506213727@172.18.10.210:26656",\n              "source": "0",\n              "data": null\n            }\n          },\n          {\n            "type": "auth/StdTx",\n            "value": {\n              "msg": [\n                {\n                  "type": "cosmos-sdk/MsgCreateValidatorProposal",\n                  "value": {\n                    "MsgCreateValidator": {\n                      "Description": {\n                        "moniker": "Scafell",\n                        "identity": "",\n                        "website": "",\n                        "details": ""\n                      },\n                      "Commission": {\n                        "rate": "0",\n                        "max_rate": "0",\n                        "max_change_rate": "0"\n                      },\n                      "delegator_address": "tbnb1r6l0c0fxu458hlq6m7amkcltj8nufyl9mr2wm5",\n                      "validator_address": "bva1r6l0c0fxu458hlq6m7amkcltj8nufyl942z69p",\n                      "pubkey": {\n                        "type": "tendermint/PubKeyEd25519",\n                        "value": "GE57ED00xBAD+bhk1fjBrdqb0ENrJTuzyES8c5wed8k="\n                      },\n                      "delegation": {\n                        "denom": "BNB",\n                        "amount": "100000000000"\n                      }\n                    },\n                    "proposal_id": "0"\n                  }\n                }\n              ],\n              "signatures": [\n                {\n                  "pub_key": {\n                    "type": "tendermint/PubKeySecp256k1",\n                    "value": "ArnjgWSGbDDJmYuIYbE97ZShYNCf0AlVjeNINmmDyYa0"\n                  },\n                  "signature": "un+GYFlzBtV9lDapslHxwHbsVi0Ng8YzAv8UK4OgSNcRU4FUX69r2ujkx6Zx8EIsgPlxCja9xgGuK9qYJwPZKw==",\n                  "account_number": "0",\n                  "sequence": "0"\n                }\n              ],\n              "memo": "c1bcf51e6022010ebb93288bd5d932a3894c999e@172.18.10.211:26656",\n              "source": "0",\n              "data": null\n            }\n          },\n          {\n            "type": "auth/StdTx",\n            "value": {\n              "msg": [\n                {\n                  "type": "cosmos-sdk/MsgCreateValidatorProposal",\n                  "value": {\n                    "MsgCreateValidator": {\n                      "Description": {\n                        "moniker": "Aconcagua",\n                        "identity": "",\n                        "website": "",\n                        "details": ""\n                      },\n                      "Commission": {\n                        "rate": "0",\n                        "max_rate": "0",\n                        "max_change_rate": "0"\n                      },\n                      "delegator_address": "tbnb193t8pkhm2sxw5uy5ypesygda8rzsk25ge3e9y7",\n                      "validator_address": "bva193t8pkhm2sxw5uy5ypesygda8rzsk25ghc336t",\n                      "pubkey": {\n                        "type": "tendermint/PubKeyEd25519",\n                        "value": "TUIK6oQ+kqDP5p2JaW3/aCd2n5y1KiSa9TfOib8qS3Q="\n                      },\n                      "delegation": {\n                        "denom": "BNB",\n                        "amount": "100000000000"\n                      }\n                    },\n                    "proposal_id": "0"\n                  }\n                }\n              ],\n              "signatures": [\n                {\n                  "pub_key": {\n                    "type": "tendermint/PubKeySecp256k1",\n                    "value": "Az0wT4xmeI7a7sEIFKcGLkiICkFBS1Fl4/hFMGV1QjL6"\n                  },\n                  "signature": "T+Jg3b6p0IOd/J0tChygDOnQjKJXl2m6K1zyyLMM2E82woc9eL7nR6j7jr00SuU5dJ/Z+UuYfeinv4R0pbGpmA==",\n                  "account_number": "0",\n                  "sequence": "0"\n                }\n              ],\n              "memo": "dd2adba52ad9c830fe16a53fe81dac6880a91218@172.18.10.212:26656",\n              "source": "0",\n              "data": null\n            }\n          },\n          {\n            "type": "auth/StdTx",\n            "value": {\n              "msg": [\n                {\n                  "type": "cosmos-sdk/MsgCreateValidatorProposal",\n                  "value": {\n                    "MsgCreateValidator": {\n                      "Description": {\n                        "moniker": "Zugspitze",\n                        "identity": "",\n                        "website": "",\n                        "details": ""\n                      },\n                      "Commission": {\n                        "rate": "0",\n                        "max_rate": "0",\n                        "max_change_rate": "0"\n                      },\n                      "delegator_address": "tbnb108drn8exhv72tp40e6lq9z949nnjj54yzqrr2f",\n                      "validator_address": "bva108drn8exhv72tp40e6lq9z949nnjj54yvfth5u",\n                      "pubkey": {\n                        "type": "tendermint/PubKeyEd25519",\n                        "value": "yA6avvf/Q5wQxo/o8TA97d/FJ3GMOzfYumgHRG48gno="\n                      },\n                      "delegation": {\n                        "denom": "BNB",\n                        "amount": "100000000000"\n                      }\n                    },\n                    "proposal_id": "0"\n                  }\n                }\n              ],\n              "signatures": [\n                {\n                  "pub_key": {\n                    "type": "tendermint/PubKeySecp256k1",\n                    "value": "A28N2eZXepmh+2enXvdAPqbbPf9yFCqYZleFjUMRJe0g"\n                  },\n                  "signature": "egp4GjM/8PEVeFJiopen35eZzy/5NKjGKmK3MGpfmAFGQvjN6G4HyGX+6eigOuw40qpMdT9HYmvzSoa+jgXURQ==",\n                  "account_number": "0",\n                  "sequence": "0"\n                }\n              ],\n              "memo": "c4d94f29e765ecfe81c940e11c2e997321aa8e0f@172.18.10.213:26656",\n              "source": "0",\n              "data": null\n            }\n          },\n          {\n            "type": "auth/StdTx",\n            "value": {\n              "msg": [\n                {\n                  "type": "cosmos-sdk/MsgCreateValidatorProposal",\n                  "value": {\n                    "MsgCreateValidator": {\n                      "Description": {\n                        "moniker": "Gahinga",\n                        "identity": "",\n                        "website": "",\n                        "details": ""\n                      },\n                      "Commission": {\n                        "rate": "0",\n                        "max_rate": "0",\n                        "max_change_rate": "0"\n                      },\n                      "delegator_address": "tbnb1vehecekrsks5sshcwvxyeyrd469j9wvcqm37yu",\n                      "validator_address": "bva1vehecekrsks5sshcwvxyeyrd469j9wvcwje26f",\n                      "pubkey": {\n                        "type": "tendermint/PubKeyEd25519",\n                        "value": "kUKvzGkbfMBdJsewvgyLRkGClBcXMOB584T94vpQuvw="\n                      },\n                      "delegation": {\n                        "denom": "BNB",\n                        "amount": "100000000000"\n                      }\n                    },\n                    "proposal_id": "0"\n                  }\n                }\n              ],\n              "signatures": [\n                {\n                  "pub_key": {\n                    "type": "tendermint/PubKeySecp256k1",\n                    "value": "AsS8HffgT0IIai/sesaWtW5wurpu7eBDkhu0esmwjsnc"\n                  },\n                  "signature": "k6LegehVpGnjQ4ePBwJajrbKlPg5tXQMkBtIZ+nbMNAHp4Z2IihYrUGMAoKu0B0LJbbNH/7Gq7b0AK5HfYEByg==",\n                  "account_number": "0",\n                  "sequence": "0"\n                }\n              ],\n              "memo": "4119f9f689f62734bcf3757f916639bc480bb8ce@172.18.10.214:26656",\n              "source": "0",\n              "data": null\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n')),(0,l.kt)("h4",{id:"616-query-health"},"6.1.6 Query Health"),(0,l.kt)("p",null,"Get node health. Returns empty result (200 OK) on success, no response - in\ncase of an error."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return Parameters")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"ResultHealth{}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'localhost:27147/health'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n\n    // handle error\n\n}\ndefer client.Stop()\nresult, err := client.Health()\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The above command returns JSON structured like this:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "error": "",\n    "result": {},\n    "id": "",\n    "jsonrpc": "2.0"\n}\n')),(0,l.kt)("h4",{id:"617-query-numunconfirmedtxs"},"6.1.7 Query NumUnconfirmedTxs"),(0,l.kt)("p",null,"Get number of unconfirmed transactions."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"limit"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"30"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Maximum number of entries (max: 100)")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return Parameters")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"// List of mempool txs\ntype ResultUnconfirmedTxs struct {\n    N   int\n    Txs []types.Tx\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'localhost:27147/num_unconfirmed_txs'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n    // handle error\n\n}\ndefer client.Stop()\nresult, err := client.UnconfirmedTxs()\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The above command returns JSON structured like this:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "error": "",\n    "result": {\n      "txs": null,\n      "n_txs": "0"\n    },\n    "id": "",\n    "jsonrpc": "2.0"\n}\n')),(0,l.kt)("h4",{id:"618-query-status"},"6.1.8 Query Status"),(0,l.kt)("p",null,"Get Tendermint status including node info, pubkey, latest block\nhash, app hash, block height and time."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return Parameters")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"// Node Status\ntype ResultStatus struct {\n    NodeInfo      p2p.DefaultNodeInfo\n    SyncInfo      SyncInfo\n    ValidatorInfo ValidatorInfo\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'localhost:27147/status'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n    // handle error\n\n}\ndefer client.Stop()\nresult, err := client.Status()\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The above command returns JSON structured like this:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": "",\n  "result": {\n    "node_info": {\n      "protocol_version": {\n        "p2p": "7",\n        "block": "10",\n        "app": "0"\n      },\n      "id": "7156d461742e2a1e569fd68426009c4194830c93",\n      "listen_addr": "aa841c226243a11e9a951063f6065739-eee556e439dc6a3b.elb.ap-northeast-1.amazonaws.com:27146",\n      "network": "Binance-Chain-Ganges",\n      "version": "0.30.1",\n      "channels": "354020212223303800",\n      "moniker": "data-seed-2",\n      "other": {\n        "tx_index": "on",\n        "rpc_address": "tcp://0.0.0.0:27147"\n      }\n    },\n    "sync_info": {\n      "latest_block_hash": "59D24993B133C9D3B56E75F627815BF2E94A1CFCD3F33BB4F4BB06583D76B8A0",\n      "latest_app_hash": "5E4B7F0D9A847BFD6D089142DD1C4B064D97672A6E8F4960B01DE0DF9C583AD0",\n      "latest_block_height": "7807330",\n      "latest_block_time": "2019-04-12T11:27:39.890570112Z",\n      "catching_up": false\n    },\n    "validator_info": {\n      "address": "32B88CEB9CE3EF1EABB840EC1556A5B4A5FD7FDB",\n      "pub_key": {\n        "type": "tendermint/PubKeyEd25519",\n        "value": "jAXPwM0xV1iwn7XJz6H0Zk8RxgELUAfjStxzIYKxaEk="\n      },\n      "voting_power": "0"\n    }\n  }\n}\n')),(0,l.kt)("h4",{id:"619-abciquery"},"6.1.9 ABCIQuery"),(0,l.kt)("p",null,"Query the application for some information."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"path"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},'Path to the data ("/a/b/c")')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"data"),(0,l.kt)("td",{parentName:"tr",align:null},"[]byte"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"Data")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"height"),(0,l.kt)("td",{parentName:"tr",align:null},"int64"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Height (0 means latest)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"prove"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Includes proof if true")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Available Query Path")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/store/acc/key")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/tokens/info")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/tokens/list")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/dex/pairs")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/dex/orderbook")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/param/fees")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/account/")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/dex/openorders")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/custom/gov/proposals")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/custom/gov/proposal")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/mini-tokens/info")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/mini-tokens/list")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/dex-mini/pairs"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return Type")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"type ResponseQuery struct {\n    Code                 uint32\n    Log                  string\n    Info                 string\n    Index                int64\n    Key                  []byte\n    Value                []byte\n    Proof                *merkle.Proof\n    Height               int64\n    Codespace            string\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"In this example, we will explain how to query account info with ",(0,l.kt)("inlineCode",{parentName:"p"},"abci_query"),"."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},'Generate query key\nTo get the correct key you need to \uff1a\nThe query key is : "account:" || address in hex. The first part is in ASCII.'),(0,l.kt)("p",{parentName:"li"},"\u201caccount:\u201d in ASCII is 6163636F756E756E and the address derived from public key is 743A89F856CB39D25C1BDDAAEC74A381577CA8E2F886. You need to add these to part to get the correct key.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Run query"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'https://data-seed-pre-0-s3.binance.org/abci_query?path=\"/store/acc/key\"&data=0x6163636F756E743A89F856CB39D25C1BDDAAEC74A381577CA8E2F886'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n    // handle error\n}\ndefer client.Stop()\nresult, err := client.ABCIQuery("/store/acc/key", "6163636F756E743A89F856CB39D25C1BDDAAEC74A381577CA8E2F886", true)\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The above command returns JSON structured like this:"),(0,l.kt)("p",{parentName:"blockquote"},"Please note that the response is amino-encoded.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": "",\n  "result": {\n    "response": {\n      "key": "YWNjb3VudDqJ+FbLOdJcG92q7HSjgVd8qOL4hg==",\n      "value": "S9xMJwrYEAoUifhWyznSXBvdqux0o4FXfKji+IYSDQoHMDAwLTBFMRCqzAUSEAoHMDAwLUVGNhC4opXaxg4SEAoHMDA3LTc0ORDYlpb09AISDwoHMEtJLTBBRhCAjO6JGhIPCggxMDBLLTlCQxDR+5MLEhIKCzEwS09OTFktMkMxEIqEmAESGAoMMUtWT0xVTUUtRDY1EPClmN+ojJTBNxISCgdBQUEtQjUwEICA+t28oLsMEhAKB0FBQS1FQjgQuO7/36oBEhEKCkFBQUFBQS1CQkEQ/OGPARIQCgdBQUQtRTE4ENDR3N/VBhIQCgdBQVMtMzYxEIDprODVBhIRCghBR1JJLUJEMhCE6q+P/wISDgoIQUxJUy05NUIQ6s5SEhEKB0FOTi00NTcQgJCmt/mlAhISCgdBU0EtREM1EICkjvf/sbwMEhIKCUFTVFJPLUY3QhDk/4D41Q4SEgoHQVRQLTkyMxDPxaTw2cv/AxIRCgdBVlQtQjc0EJLgo8O1xwISDQoHQkMxLTNBMRDw+3YSDgoHQkVZLThDNhCwicYBEg0KA0JOQhDg2ayZy5QZEhEKB0JOTi00MTEQgJCmt/mlAhISCglCVE1HTC1DNzIQ0taxh/oFEhAKB0NBVC1GOUIQsKa8tMMFEhEKCENFTFItNDJCEIiQ/7vZQhIRCgdDTk4tMjEwEICQprf5pQISEwoKQ09TTU9TLTU4NxDSxt/FoQMSEAoHQ1I3LTRDQxDkrtff1QYSFQoMQ1JZUFJJQ0UtMTUwEICA0ZS1dBIPCgdDWkMtRDYzELCviZ53EhQKCkNaQ09JTi0zM0IQndnH3aXYBBISCgdDWlotNjk2EICAgtT6+LYNEg0KB0RDMS00QjgQ8Pt2Eg8KB0RDQy01MkEQ6qjT21USEAoHREVDLTIzNxCowOK9jQESEAoHREdCLTVGQhDQ4c7f1QYSDwoIRExMTS04RTUQgOHrFxIRCghEVUlULTMxQxColvyWwwMSDwoHRTBDLUVGOBCwr4medxIQCgdFRFUtREQwEJT66Ju3GBISCglFVEguQi0yNjEQgNr5ycMBEg8KB0ZCQi1FMDMQnPf/r1USEAoHRkNULUI2MBC95ZTwhgwSDwoHRkxDLUZCMhCwr4medxIPCgdGUkktRDVGEILlifUpEhIKCUdBTkpBLTg4MBCw5ceA6AISDwoHR0NDLThGNhCc9/+vVRIVCgpIQVJVS0EtODAwEICAgr+T7/AIEg8KB0hERC1BOUEQgMivoCUSEQoKSEVJTUE1LUY5NxCAhK9fEg4KB0lBQS1DODEQ8O/EBBIOCgdJQkItOERFEPDvxAQSDgoHSUNDLTZFRhDw78QEEg4KB0lERC01MTYQ8O/EBBIOCgdJRUUtRENBEPDvxAQSDgoHSUZGLTgwNBDw78QEEg4KB0lHRy0wMTMQ8O/EBBIOCgdJSEgtRDRFEPDvxAQSDgoHSUlJLTI1QxDw78QEEg4KB0lKSi02NUUQ8O/EBBISCglKQUdFUi0xNjIQ6PP35dkREhAKCEpEV0stQzgxEKSz1cwBEhIKCktPR0U0OC0zNUQQkc+TtlYSDQoHTEMxLTdGQxDw+3YSDwoHTENRLUFDNRCilb2DIhIOCgdMTEwtOTE1EIDC1y8SEQoITUJOQi0xMTMQ5K7X39UGEg0KB01DMS0zQTgQ4LwHEhAKCE1FTUUtOTNDEOi0lNsdEhIKB01GSC05QjUQgq70zd+o+QgSEAoHTUdULTNGMBC95ZTwhgwSEAoHTUxDLURCMhDkrtff1QYSDQoHTkMxLTI3ORDw+3YSDgoHTkMxLUY2MxDbss01Eg0KB05DMi0yNDkQnMBhEhAKB05GVC03RUUQyMfywM8EEhAKCE5NU0wtMTlEEJz3/69VEhAKB09DQi03NUIQu4qa7KwBEg8KB09DQi1COTUQ5aKp8hESEAoHT0VOLUZEMRCw3KG+2UISEAoHUElDLUY0MBCE6q+P/wISDwoHUE5ELTk0MxC45rGfChIOCgdQUEMtMDBBELPxzAISDQoHUkJULUNCNxDqzlISDQoHUkMxLTk0MxDw+3YSDQoHUkMxLUExRRDw+3YSDQoHUkMxLUY0ORDw+3YSEAoHUlVTLUZBMRCI5pik/0gSFgoLU0FUT1NISS1DOTIQyJDGjuTnrgUSEQoKU0NBUkNFLTk2NxC745oWEg8KB1NDTS1DREYQuOaxnwoSEQoIU0VOVC03MzAQwpvYq6gJEhAKCFNFUFQtMTM3EICU69wDEhAKB1NFWC1EQTMQgKjH4ZwDEhAKB1NMQy02RDEQ4P7Q66wBEg4KB1NWQy1BMTQQju3iCBINCgdUQzEtQTI5EOC8BxINCgdUQzEtRjQzEPD7dhIRCglURVNMQS1BNEYQ/L+P/AkSDgoHVEZBLTNCNBCIzOwCEhAKCFRGRkEtMDQwEOyEg60VEhEKB1RHVC05RkMQ6O+Y/afOSxIRCgdVQ1gtQ0M4EM+ft4DNywESDwoHVURPLTYzOBDimobkEhIQCgdVS1QtNzEwELCmvLTDBRIPCgdXSU4tQUI4EJz3/69VEhEKCVdXVzc2LUE4RhCAzcSZERIOCgdYU1gtMDcyEJqJ8wQSEQoJWFhYNzctRURDEPCOq5cREg8KB1lMQy1EOEIQ7ZaejwESEQoJWVlZNzgtQkNEEPC7uK4iEhEKCVpBTktVLUNDQRDqoOvvBhIRCglaRUJSQS0xNkQQnPf/r1USEAoHWlpaLTIxRRD8o+3huQISEQoJWlpaNzktM0M0EPCOq5cRGibrWumHIQOKveXhJ+HEdW28VUamHPKWy7ymMmjMY82k0ppEyUFK+iAOKPLaAiILCgNCTkIQsK3TqXs=",\n      "height": "7775621"\n    }\n  }\n}\n')),(0,l.kt)("p",null,"The account balance information is the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"type":"bnbchain/Account","value":{"base":{"address":"tbnb1sylyjw032eajr9cyllp26n04300qzzre38qyv5","coins":[{"denom":"000-0E1","amount":"10530"},{"denom":"AGRI-BD2","amount":"102842693026"},{"denom":"ALIS-95B","amount":"1008261"},{"denom":"ANN-457","amount":"10100000000000"},{"denom":"AVT-B74","amount":"2280343"},{"denom":"BC1-3A1","amount":"1826704"},{"denom":"BNB","amount":"10221947267999"},{"denom":"BNN-411","amount":"10100000000000"},{"denom":"BTC.B-918","amount":"113218800"},{"denom":"BTMGL-C72","amount":"204562981873"},{"denom":"CNN-210","amount":"10100000000000"},{"denom":"COSMOS-587","amount":"50000101983748977"},{"denom":"DC1-4B8","amount":"1826704"},{"denom":"DUIT-31C","amount":"121112394964"},{"denom":"EDU-DD0","amount":"139885964"},{"denom":"FRI-D5F","amount":"11251373129"},{"denom":"IAA-C81","amount":"9448420"},{"denom":"IBB-8DE","amount":"9448420"},{"denom":"ICC-6EF","amount":"9448420"},{"denom":"IDD-516","amount":"9448420"},{"denom":"IEE-DCA","amount":"9448420"},{"denom":"IFF-804","amount":"9448420"},{"denom":"IGG-013","amount":"9448420"},{"denom":"IHH-D4E","amount":"9448420"},{"denom":"III-25C","amount":"9448420"},{"denom":"IJJ-65E","amount":"9448420"},{"denom":"KOGE48-35D","amount":"10000000000"},{"denom":"LC1-7FC","amount":"1826704"},{"denom":"LCQ-AC5","amount":"9133568718"},{"denom":"MFH-9B5","amount":"1258976083286"},{"denom":"NASC-137","amount":"0"},{"denom":"NC1-279","amount":"1826704"},{"denom":"NC2-249","amount":"1411566"},{"denom":"OCB-B95","amount":"10000000000"},{"denom":"PIC-F40","amount":"102842693026"},{"denom":"PPC-00A","amount":"205150260"},{"denom":"RBT-CB7","amount":"1008261"},{"denom":"RC1-943","amount":"1826704"},{"denom":"RC1-A1E","amount":"1826704"},{"denom":"RC1-F49","amount":"1826704"},{"denom":"SVC-A14","amount":"18267042"},{"denom":"TC1-F43","amount":"1826704"},{"denom":"TFA-3B4","amount":"5731324"},{"denom":"TGT-9FC","amount":"33251102828"},{"denom":"UCX-CC8","amount":"1398859649"},{"denom":"UDO-638","amount":"5041308481"},{"denom":"USDT.B-B7C","amount":"138793116268"},{"denom":"WWW76-A8F","amount":"4611856"},{"denom":"XSX-072","amount":"10228149"},{"denom":"YLC-D8B","amount":"210572645"},{"denom":"ZEBRA-16D","amount":"1000"},{"denom":"ZZZ-21E","amount":"13988596"}],"public_key":{"type":"tendermint/PubKeySecp256k1","value":"AhOb3ZXecsIqwqKw+HhTscyi6K35xYpKaJx10yYwE0Qa"},"account_number":"406226","sequence":"52"},"name":"","frozen":null,"locked":[{"denom":"BNB","amount":"800"}]}}\n')),(0,l.kt)("p",null,"You can also query from ",(0,l.kt)("inlineCode",{parentName:"p"},"/account/"),". This is how ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/binance-chain/go-sdk/blob/master/client/rpc/dex_client.go#L144"},"go-sdk")," handles balance query, because it relects account changes which are not committed in a block too."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'curl \'https://data-seed-pre-0-s3.binance.org/abci_query?path="/account/tbnb1hn8ym9xht925jkncjpf7lhjnax6z8nv2mu9wy3"\'\n\n```go\nclient := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n    // handle error\n\n}\ndefer client.Stop()\naccount, err := client.GetAccount("Your address")\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The above command returns JSON structured like this:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": "",\n  "result": {\n    "response": {\n      "value": "S9xMJwq9AQoUvM5NlNdZVUlaeJBT795T6bQjzYoSCwoDQk5CEMTDqYoHEhMKCkNBU0hBQS1DMUQQrPHKsqsaEg8KB0RERC04RTYQgJrmkHASEAoIRVRUMy1GODIQ6pONngISEwoIUUFSSy05QjYQgICS/KPV3AsSDgoHVFNULUQ1NxCAhK9fEg4KB1RTVy02RkQQgMLXLxIVCglUVVNEQi0wMDAQgK7J+qj82+d8EhAKCFpFQkktNjAyEIDkl9ASILC1KQ=="\n    }\n  }\n')),(0,l.kt)("h4",{id:"6110--query-block"},"6.1.10  Query Block"),(0,l.kt)("p",null,"Get block at a given height.\nIf no height is provided, it will fetch the latest block."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"height"),(0,l.kt)("td",{parentName:"tr",align:null},"int64"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"height of blockchain")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return Type:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'type ResultBlock struct {\n    BlockMeta *types.BlockMeta\n    Block     *types.Block\n}\n// BlockMeta contains meta information about a block - namely, it\'s ID and Header.\ntype BlockMeta struct {\n    BlockID BlockID\n    Header  Header\n}\n// Block defines the atomic unit of a Tendermint blockchain.\ntype Block struct {\n    mtx        sync.Mutex\n    Header     `json:"header"`\n    Data       `json:"data"`\n    Evidence   EvidenceData\n    LastCommit *Commit\n}\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'localhost:27147/block?height=10'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n    // handle error\n\n}\ndefer client.Stop()\ninfo, err := client.Block(10)\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The above command returns JSON structured like this:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": "",\n    "result": {\n        "last_height": "7570471",\n        "block_metas": [\n            {\n                "block_id": {\n                    "hash": "5701A12896315A121303A979ACB707ACC447E20EFACFCB26174E9ED3997E2F5C",\n                    "parts": {\n                        "total": "1",\n                        "hash": "8C63BE3E3A221B984219CFAA1C196DDF0F202D68293311BFA9EE0B7A9155EACD"\n                    }\n                },\n                "header": {\n                    "version": {\n                        "block": "10",\n                        "app": "0"\n                    },\n                    "chain_id": "Binance-Chain-Ganges",\n                    "height": "10",\n                    "time": "2019-03-07T01:57:22.135103158Z",\n                    "num_txs": "0",\n                    "total_txs": "0",\n                    "last_block_id": {\n                        "hash": "1AF674F804E277354E8742176ECA74E338F52C237E6DBFF92819D75037E4F651",\n                        "parts": {\n                            "total": "1",\n                            "hash": "BB3C36D5BBDAB441A7339385C071C4E804C4C3DD5C7BC15D60BC658A6B261906"\n                        }\n                    },\n                    "last_commit_hash": "5442553C06521016756796015AF78FCAC752FFA9E94ACAF4DAA5DF4113B4B354",\n                    "data_hash": "",\n                    "validators_hash": "80D9AB0FC10D18CA0E0832D5F4C063C5489EC1443DFB738252D038A82131B27A",\n                    "next_validators_hash": "80D9AB0FC10D18CA0E0832D5F4C063C5489EC1443DFB738252D038A82131B27A",\n                    "consensus_hash": "294D8FBD0B94B767A7EBA9840F299A3586DA7FE6B5DEAD3B7EECBA193C400F93",\n                    "app_hash": "E7D96927FD82FD910624AA8034B8A527FCEB1F7AB353DE789A3ECA8D400BDE31",\n                    "last_results_hash": "",\n                    "evidence_hash": "",\n                    "proposer_address": "E0DD72609CC106210D1AA13936CB67B93A0AEE21"\n                }\n            }\n        ]\n    }\n}\n')),(0,l.kt)("h4",{id:"6111-query-blockresults"},"6.1.11 Query BlockResults"),(0,l.kt)("p",null,"BlockResults gets ABCIResults at a given height.\nIf no height is provided, it will fetch results for the latest block.\nResults are for the height of the block containing the txs.\nThus response.results","[5]"," is the results of executing getBlock(h).Txs","[5]"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"height"),(0,l.kt)("td",{parentName:"tr",align:null},"int64"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"height of blockchain")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return Type:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"type ResultBlockResults struct {\n    Height  int64\n    Results *state.ABCIResponses\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'localhost:27147/block_results?height=10'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n    // handle error\n\n}\ndefer client.Stop()\ninfo, err := client.BlockResults(10)\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The above command returns JSON structured like this:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": "",\n    "result": {\n        "height": "7570163",\n        "results": {\n            "DeliverTx": [\n                {\n                    "data": "eyJvcmRlcl9pZCI6IkI3ODFFNURDREU1NUNGRjY2NkM5QTNGNjMwREZFQUE0RkE5NDBDQkEtMjMzMSJ9",\n                    "log": "Msg 0: ",\n                    "tags": [\n                        {\n                            "key": "YWN0aW9u",\n                            "value": "b3JkZXJOZXc="\n                        }\n                    ]\n                }\n            ],\n            "EndBlock": {\n                "validator_updates": null\n            },\n            "BeginBlock": { }\n        }\n    }\n}\n')),(0,l.kt)("h4",{id:"6112-query-blockchaininfo"},"6.1.12 Query BlockchainInfo"),(0,l.kt)("p",null,"Get block headers for minHeight <= height <= maxHeight.\nBlock headers are returned in descending order (highest first)."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"minHeight"),(0,l.kt)("td",{parentName:"tr",align:null},"int64"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"height of blockchain")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"maxHeight"),(0,l.kt)("td",{parentName:"tr",align:null},"int64"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"height of blockchain")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return Type:")),(0,l.kt)("p",null,"List of blocks"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"type ResultBlockchainInfo struct {\n    LastHeight int64\n    BlockMetas []*types.BlockMeta\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'localhost:27147/blockchain?minHeight=10&maxHeight=10'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n    // handle error\n\n}\ndefer client.Stop()\ninfo, err := client.BlockchainInfo(10, 10)\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The above command returns JSON structured like this:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "jsonrpc": "2.0",\n   "id": "",\n   "result": {\n      "last_height": "7570471",\n      "block_metas": [\n         {\n            "block_id": {\n               "hash": "5701A12896315A121303A979ACB707ACC447E20EFACFCB26174E9ED3997E2F5C",\n               "parts": {\n                  "total": "1",\n                  "hash": "8C63BE3E3A221B984219CFAA1C196DDF0F202D68293311BFA9EE0B7A9155EACD"\n               }\n            },\n            "header": {\n               "version": {\n                  "block": "10",\n                  "app": "0"\n               },\n               "chain_id": "Binance-Chain-Ganges",\n               "height": "10",\n               "time": "2019-03-07T01:57:22.135103158Z",\n               "num_txs": "0",\n               "total_txs": "0",\n               "last_block_id": {\n                  "hash": "1AF674F804E277354E8742176ECA74E338F52C237E6DBFF92819D75037E4F651",\n                  "parts": {\n                     "total": "1",\n                     "hash": "BB3C36D5BBDAB441A7339385C071C4E804C4C3DD5C7BC15D60BC658A6B261906"\n                  }\n               },\n               "last_commit_hash": "5442553C06521016756796015AF78FCAC752FFA9E94ACAF4DAA5DF4113B4B354",\n               "data_hash": "",\n               "validators_hash": "80D9AB0FC10D18CA0E0832D5F4C063C5489EC1443DFB738252D038A82131B27A",\n               "next_validators_hash": "80D9AB0FC10D18CA0E0832D5F4C063C5489EC1443DFB738252D038A82131B27A",\n               "consensus_hash": "294D8FBD0B94B767A7EBA9840F299A3586DA7FE6B5DEAD3B7EECBA193C400F93",\n               "app_hash": "E7D96927FD82FD910624AA8034B8A527FCEB1F7AB353DE789A3ECA8D400BDE31",\n               "last_results_hash": "",\n               "evidence_hash": "",\n               "proposer_address": "E0DD72609CC106210D1AA13936CB67B93A0AEE21"\n            }\n         }\n      ]\n   }\n}\n')),(0,l.kt)("h4",{id:"6113-query-commit"},"6.1.13 Query Commit"),(0,l.kt)("p",null,"Get block commit at a given height.\nIf no height is provided, it will fetch the commit for the latest block."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Transaction Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Height"),(0,l.kt)("td",{parentName:"tr",align:null},"int64"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"height of blockchain")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return Parameters")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"type ResultCommit struct {\n    types.SignedHeader\n    CanonicalCommit    bool\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'localhost:27147/commit?height=10'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n\n    // handle error\n\n}\ndefer client.Stop()\ninfo, err := client.Commit(100)\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The above command returns JSON structured like this:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": "",\n  "result": {\n    "signed_header": {\n      "header": {\n        "version": {\n          "block": "10",\n          "app": "0"\n        },\n        "chain_id": "Binance-Chain-Ganges",\n        "height": "10",\n        "time": "2019-03-07T01:57:22.135103158Z",\n        "num_txs": "0",\n        "total_txs": "0",\n        "last_block_id": {\n          "hash": "1AF674F804E277354E8742176ECA74E338F52C237E6DBFF92819D75037E4F651",\n          "parts": {\n            "total": "1",\n            "hash": "BB3C36D5BBDAB441A7339385C071C4E804C4C3DD5C7BC15D60BC658A6B261906"\n          }\n        },\n        "last_commit_hash": "5442553C06521016756796015AF78FCAC752FFA9E94ACAF4DAA5DF4113B4B354",\n        "data_hash": "",\n        "validators_hash": "80D9AB0FC10D18CA0E0832D5F4C063C5489EC1443DFB738252D038A82131B27A",\n        "next_validators_hash": "80D9AB0FC10D18CA0E0832D5F4C063C5489EC1443DFB738252D038A82131B27A",\n        "consensus_hash": "294D8FBD0B94B767A7EBA9840F299A3586DA7FE6B5DEAD3B7EECBA193C400F93",\n        "app_hash": "E7D96927FD82FD910624AA8034B8A527FCEB1F7AB353DE789A3ECA8D400BDE31",\n        "last_results_hash": "",\n        "evidence_hash": "",\n        "proposer_address": "E0DD72609CC106210D1AA13936CB67B93A0AEE21"\n      },\n      "commit": {\n        "block_id": {\n          "hash": "5701A12896315A121303A979ACB707ACC447E20EFACFCB26174E9ED3997E2F5C",\n          "parts": {\n            "total": "1",\n            "hash": "8C63BE3E3A221B984219CFAA1C196DDF0F202D68293311BFA9EE0B7A9155EACD"\n          }\n        },\n        "precommits": [\n          null,\n          {\n            "type": 2,\n            "height": "10",\n            "round": "1",\n            "block_id": {\n              "hash": "5701A12896315A121303A979ACB707ACC447E20EFACFCB26174E9ED3997E2F5C",\n              "parts": {\n                "total": "1",\n                "hash": "8C63BE3E3A221B984219CFAA1C196DDF0F202D68293311BFA9EE0B7A9155EACD"\n              }\n            },\n            "timestamp": "2019-03-07T01:57:27.663157746Z",\n            "validator_address": "18E69CC672973992BB5F76D049A5B2C5DDF77436",\n            "validator_index": "1",\n            "signature": "ZrnapmTAiJrhm0DVIoTzRbJG+FDCAxBpfamYxZj2eg0+wY0+KDg48sDPlD+chk97ti01PukuVsftn4U6HXbkCA=="\n          },\n          {\n            "type": 2,\n            "height": "10",\n            "round": "1",\n            "block_id": {\n              "hash": "5701A12896315A121303A979ACB707ACC447E20EFACFCB26174E9ED3997E2F5C",\n              "parts": {\n                "total": "1",\n                "hash": "8C63BE3E3A221B984219CFAA1C196DDF0F202D68293311BFA9EE0B7A9155EACD"\n              }\n            },\n            "timestamp": "2019-03-07T01:57:27.669872809Z",\n            "validator_address": "344C39BB8F4512D6CAB1F6AAFAC1811EF9D8AFDF",\n            "validator_index": "2",\n            "signature": "VRB1MYpxCCA8EnjWSRl4cTMP9P7uBEvkPRtSr7grgpPEERfc6J5/gySD6LKkOe1nNpyeYi1RU/vqAibSEnMNDQ=="\n          },\n          null,\n          {\n            "type": 2,\n            "height": "10",\n            "round": "1",\n            "block_id": {\n              "hash": "5701A12896315A121303A979ACB707ACC447E20EFACFCB26174E9ED3997E2F5C",\n              "parts": {\n                "total": "1",\n                "hash": "8C63BE3E3A221B984219CFAA1C196DDF0F202D68293311BFA9EE0B7A9155EACD"\n              }\n            },\n            "timestamp": "2019-03-07T01:57:27.737578359Z",\n            "validator_address": "62633D9DB7ED78E951F79913FDC8231AA77EC12B",\n            "validator_index": "4",\n            "signature": "pP75DGwI23nsph3i5MbNbu1fblj4ZfCLqKkruTLhdTTpOC9WrfM4MPTWJg6WuNJzxNwpjZnOdDPoITydsajvAw=="\n          },\n          {\n            "type": 2,\n            "height": "10",\n            "round": "1",\n            "block_id": {\n              "hash": "5701A12896315A121303A979ACB707ACC447E20EFACFCB26174E9ED3997E2F5C",\n              "parts": {\n                "total": "1",\n                "hash": "8C63BE3E3A221B984219CFAA1C196DDF0F202D68293311BFA9EE0B7A9155EACD"\n              }\n            },\n            "timestamp": "2019-03-07T01:57:27.729696171Z",\n            "validator_address": "7B343E041CA130000A8BC00C35152BD7E7740037",\n            "validator_index": "5",\n            "signature": "VcVUpB6Aj3of7T8eY0ZYpf0QJ/YuB9N93knaO8ZcMye6kEnGQLCItw+V8brHMU/y4SV9Jq0KHz2LfvBBcdcYAQ=="\n          },\n          {\n            "type": 2,\n            "height": "10",\n            "round": "1",\n            "block_id": {\n              "hash": "5701A12896315A121303A979ACB707ACC447E20EFACFCB26174E9ED3997E2F5C",\n              "parts": {\n                "total": "1",\n                "hash": "8C63BE3E3A221B984219CFAA1C196DDF0F202D68293311BFA9EE0B7A9155EACD"\n              }\n            },\n            "timestamp": "2019-03-07T01:57:27.672880876Z",\n            "validator_address": "91844D296BD8E591448EFC65FD6AD51A888D58FA",\n            "validator_index": "6",\n            "signature": "DF9YrPQYMvj6NnXjiDh6feuvh4XVHKYda5MTCj+SUq78h4rTRyQhVv/xDkk2ubbJiTB4F+n/kvM4rHcd2TbsCg=="\n          },\n          {\n            "type": 2,\n            "height": "10",\n            "round": "1",\n            "block_id": {\n              "hash": "5701A12896315A121303A979ACB707ACC447E20EFACFCB26174E9ED3997E2F5C",\n              "parts": {\n                "total": "1",\n                "hash": "8C63BE3E3A221B984219CFAA1C196DDF0F202D68293311BFA9EE0B7A9155EACD"\n              }\n            },\n            "timestamp": "2019-03-07T01:57:27.660610801Z",\n            "validator_address": "B3727172CE6473BC780298A2D66C12F1A14F5B2A",\n            "validator_index": "7",\n            "signature": "yA2O30cMpPoWn1EYzzz1yXKTozwuYvFN1UhKBWK/BNqt5yH+iKovAydGHCVfrypt6tM7tVMB7MZHi+LaIg5iBQ=="\n          },\n          null,\n          {\n            "type": 2,\n            "height": "10",\n            "round": "1",\n            "block_id": {\n              "hash": "5701A12896315A121303A979ACB707ACC447E20EFACFCB26174E9ED3997E2F5C",\n              "parts": {\n                "total": "1",\n                "hash": "8C63BE3E3A221B984219CFAA1C196DDF0F202D68293311BFA9EE0B7A9155EACD"\n              }\n            },\n            "timestamp": "2019-03-07T01:57:27.736707757Z",\n            "validator_address": "E0DD72609CC106210D1AA13936CB67B93A0AEE21",\n            "validator_index": "9",\n            "signature": "N57iWLGl39ANFftgAoEoIvjFJWLNxT5vhdo7oG2X76w/hhrduettBTxUUBwR33HcjvSHEvVGXOT0L5oqzW4BCw=="\n          },\n          {\n            "type": 2,\n            "height": "10",\n            "round": "1",\n            "block_id": {\n              "hash": "5701A12896315A121303A979ACB707ACC447E20EFACFCB26174E9ED3997E2F5C",\n              "parts": {\n                "total": "1",\n                "hash": "8C63BE3E3A221B984219CFAA1C196DDF0F202D68293311BFA9EE0B7A9155EACD"\n              }\n            },\n            "timestamp": "2019-03-07T01:57:27.738256001Z",\n            "validator_address": "FC3108DC3814888F4187452182BC1BAF83B71BC9",\n            "validator_index": "10",\n            "signature": "Hw1BdfL79cLsTJhb406k+1MvU27zL1pdehLBHqkzF5NNOn/LrL4+u3t2ANwHaxX5OFijgZW5P1T7ECVrvJr0CQ=="\n          }\n        ]\n      }\n    },\n    "canonical": true\n  }\n}\n')),(0,l.kt)("h4",{id:"6114-query-tx"},"6.1.14 Query Tx"),(0,l.kt)("p",null,"Tx allows you to query the transaction results. ",(0,l.kt)("inlineCode",{parentName:"p"},"nil")," could mean the\ntransaction is in the mempool, invalidated, or was not sent in the first\nplace."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"hash"),(0,l.kt)("td",{parentName:"tr",align:null},"[]byte"),(0,l.kt)("td",{parentName:"tr",align:null},"nil"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"The transaction hash")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"prove"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Include a proof of the transaction inclusion in the block")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns Parameters")),(0,l.kt)("p",null,"Returns a transaction matching the given transaction hash."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"// Result of querying for a tx\ntype ResultTx struct {\n    Hash     cmn.HexBytes          //hash of the transaction\n    Height   int64                  //height of the block where this transaction was in\n    Index    uint32                 //index of the transaction\n    TxResult abci.ResponseDeliverTx //the `abci.Result` object\n    Tx       types.Tx               //the transaction\n    Proof    types.TxProof          //the `types.TxProof` object\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'curl "localhost:27147/tx?hash=0xAB1B84C7C0B0B195941DCE9CFE1A54214B72D5DB54AD388D8B146A6B62911E8E"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n\n    // handle error\n\n}\ndefer client.Stop()\ntx, err := client.Tx([]byte("AB1B84C7C0B0B195941DCE9CFE1A54214B72D5DB54AD388D8B146A6B62911E8E"), true)\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The above command returns JSON structured like this:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "jsonrpc": "2.0",\n   "id": "",\n   "result": {\n      "hash": "AB1B84C7C0B0B195941DCE9CFE1A54214B72D5DB54AD388D8B146A6B62911E8E",\n      "height": "7560096",\n      "index": 0,\n      "tx_result": {\n         "data": "eyJvcmRlcl9pZCI6IjgxM0U0OTM5RjE1NjdCMjE5NzA0RkZDMkFENERGNThCREUwMTA4NzktNDMifQ==",\n         "log": "Msg 0: ",\n         "tags": [\n            {\n               "key": "YWN0aW9u",\n               "value": "b3JkZXJOZXc="\n            }\n         ]\n      },\n      "tx": "2wHwYl3uCmPObcBDChSBPkk58VZ7IZcE/8KtTfWL3gEIeRIrODEzRTQ5MzlGMTU2N0IyMTk3MDRGRkMyQUQ0REY1OEJERTAxMDg3OS00MxoNWkVCUkEtMTZEX0JOQiACKAEwwIQ9OJBOQAEScAom61rphyECE5vdld5ywirCorD4eFOxzKLorfnFikponHXTJjATRBoSQFmMOnTcCNgtl2aO01I6EFoq+3UsW+NNCftfMVjVXbL1RaJGYmPPgPAtEYTdUO/E2KY2omKQmmMuvt3qpCbAkrIY0uUYICo="\n   }\n}\n')),(0,l.kt)("p",null,"Please note that this transaction information is amino-encoded. You will see the original transaction information after decoding:\n",(0,l.kt)("inlineCode",{parentName:"p"},"Data")," field is:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "orderData": {\n    "symbol": "ZEBRA-16D_BNB",\n    "orderType": "limit",\n    "side": "buy",\n    "price": 0.01,\n    "quantity": 0.0001,\n    "timeInForce": "GTE",\n    "orderId": "813E4939F1567B219704FFC2AD4DF58BDE010879-43"\n  }\n}\n')),(0,l.kt)("p",null,"Tx filed is:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"type":"auth/StdTx","value":{"msg":[{"type":"dex/NewOrder","value":{"sender":"tbnb1sylyjw032eajr9cyllp26n04300qzzre38qyv5","id":"813E4939F1567B219704FFC2AD4DF58BDE010879-53","symbol":"ZEBRA-16D_BNB","ordertype":2,"side":1,"price":"1000000","quantity":"10000","timeinforce":1}}],"signatures":[{"pub_key":{"type":"tendermint/PubKeySecp256k1","value":"AhOb3ZXecsIqwqKw+HhTscyi6K35xYpKaJx10yYwE0Qa"},"signature":"6qppgKBUp5Fwc77qc1I/U1qX4H4VSBP/fHUWaEPoQDk/visNDIGCts96271+TaflByaRV/toQTulIHOjbT9oJQ==","account_number":" <account-number>","sequence":""}],"memo":"","source":"0","data":null}}\n')),(0,l.kt)("h4",{id:"6115-query-txsearch"},"6.1.15 Query TxSearch"),(0,l.kt)("p",null,"TxSearch allows you to query for multiple transactions results.You could search transaction by its index.  It returns a\nlist of transactions (maximum ?per_page entries) and the total count."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Enable Indexer")),(0,l.kt)("p",null,"You need to enable indexer in ",(0,l.kt)("inlineCode",{parentName:"p"},"config.tml"),". You can modify the ",(0,l.kt)("inlineCode",{parentName:"p"},"index_tags")," to include ",(0,l.kt)("inlineCode",{parentName:"p"},"tx.height"),', which is the only tag we support now. In this way, you can index transactions by height by adding "tx.height" tag here.'),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"query"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},'""'),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"Query")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"prove"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Include proofs of the transactions inclusion in the block")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"page"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Page number (1-based)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"per_page"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"30"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Number of entries per page (max: 100)")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns Parameters")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"proof"),": the ",(0,l.kt)("inlineCode",{parentName:"li"},"types.TxProof")," object"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tx"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"[]byte")," - the transaction"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tx_result"),": the ",(0,l.kt)("inlineCode",{parentName:"li"},"abci.Result")," object"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"index"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"int")," - index of the transaction"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"height"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"int")," - height of the block where this transaction was in"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hash"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"[]byte")," - hash of the transaction")),(0,l.kt)("p",null,"!!! Tip\nDue to changes of underling Tendermint library, ",(0,l.kt)("inlineCode",{parentName:"p"},"ResponseCheckTx"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"ResponseDeliverTx"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"ResponseBeginBlock"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"ResponseEndBlock")," now include ",(0,l.kt)("strong",{parentName:"p"},"Events")," instead of ",(0,l.kt)("strong",{parentName:"p"},"Tags"),". Each Event contains a type and a list of attributes (list of key-value pairs) allowing for inclusion of multiple distinct events in each response."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Available Query Path")),(0,l.kt)("p",null,"Right now, you can only query by transaction height: ",(0,l.kt)("inlineCode",{parentName:"p"},"tx.height"),". Please note that on Binance Chain testnet, you can only use this data seed node for tx search: ",(0,l.kt)("a",{parentName:"p",href:"https://data-seed-pre-0-s3.binance.org"},"https://data-seed-pre-0-s3.binance.org")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"For example, if you want to search all the transactions that happened on height 10000."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'curl "localhost:27147/tx_search?query=\\"tx.height=10000\\"&prove=true"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n\n    // handle error\n\n}\ndefer client.Stop()\nq, err := tmquery.New("tx.height=10000")\ntx, err := client.TxSearch(q, true)\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The above command returns JSON structured like this:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": "",\n  "result": {\n    "txs": [\n      {\n        "hash": "1FDE1BF2748AD972F937E3B8C526B9B651853C366E0D335CD1D8DC887AF2DB52",\n        "height": "86489220",\n        "index": 0,\n        "tx_result": {\n          "data": "eyJvcmRlcl9pZCI6IjE0NjhFRTQxMkMzQURDOUNGRjNFRjMxQURDN0VERDI4OEY1RTIwOEUtNDkwMzE4OCJ9",\n          "log": "Msg 0: ",\n          "events": [\n            {\n              "attributes": [\n                {\n                  "key": "YWN0aW9u",\n                  "value": "b3JkZXJOZXc="\n                }\n              ]\n            }\n          ]\n        },\n        "tx": "6QHwYl3uCm7ObcBDChQUaO5BLDrcnP8+8xrcft0oj14gjhIwMTQ2OEVFNDEyQzNBREM5Q0ZGM0VGMzFBREM3RUREMjg4RjVFMjA4RS00OTAzMTg4Gg9FVEhCRUFSLUIyQl9CTkIgAigCMJiL8wQ4gOTWphlAARJzCibrWumHIQN71QxNe08M6356bk2a6vV44SNkfxQb6DJo5F3sUPjM1RJADS7q9+Hlan0KMFWpd5S4ICALh3JvSo39xL1pGhgkwFwSy46hN8rzh9ZslXgFgv21srx6fPF3P+B87VcFEbn6qBiMwBQgk6KrAg==",\n        "proof": {\n          "RootHash": "5580E084B92507148E9851F4C03E71A6CAC122973C209C2DE8D28EAE3B8BA620",\n          "Data": "6QHwYl3uCm7ObcBDChQUaO5BLDrcnP8+8xrcft0oj14gjhIwMTQ2OEVFNDEyQzNBREM5Q0ZGM0VGMzFBREM3RUREMjg4RjVFMjA4RS00OTAzMTg4Gg9FVEhCRUFSLUIyQl9CTkIgAigCMJiL8wQ4gOTWphlAARJzCibrWumHIQN71QxNe08M6356bk2a6vV44SNkfxQb6DJo5F3sUPjM1RJADS7q9+Hlan0KMFWpd5S4ICALh3JvSo39xL1pGhgkwFwSy46hN8rzh9ZslXgFgv21srx6fPF3P+B87VcFEbn6qBiMwBQgk6KrAg==",\n          "Proof": {\n            "total": "1",\n            "index": "0",\n            "leaf_hash": "VYDghLklBxSOmFH0wD5xpsrBIpc8IJwt6NKOrjuLpiA=",\n            "aunts": []\n          }\n        }\n      }\n    ],\n    "total_count": "1"\n  }\n}\n')),(0,l.kt)("h3",{id:"62-tx-apis"},"6.2 Tx APIs"),(0,l.kt)("h4",{id:"621-broadcasttxasync"},"6.2.1 BroadcastTxAsync"),(0,l.kt)("p",null,"This method just return transaction hash right away and there is no return from CheckTx or DeliverTx."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Transaction Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tx"),(0,l.kt)("td",{parentName:"tr",align:null},"Tx"),(0,l.kt)("td",{parentName:"tr",align:null},"nil"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"The transaction info")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return Parameters")),(0,l.kt)("p",null,"CheckTx Result"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"type ResultBroadcastTx struct {\n    Code uint32\n    Data cmn.HexBytes\n    Log  string\n    Hash cmn.HexBytes\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example of Calling REST")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Query the account number and sequence of your address")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"tbnbcli account your-address  --chain-id=Binance-Chain-Ganges --node=data-seed-pre-2-s1.binance.org:80\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Generate your transaction json and save this output to a json file")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'tbnbcli send --from name --to=to-address --amount=500000000:BNB --chain-id=Binance-Chain-Ganges --node=data-seed-pre-2-s1.binance.org:80 --json --memo "Test transfer" --generate-only\n')),(0,l.kt)("p",null,"The returned value is the transaction to be sent without signature\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},' {"type":"auth/StdTx","value":{"msg":[{"type":"dex/NewOrder","value":{"sender":"tbnb1sylyjw032eajr9cyllp26n04300qzzre38qyv5","id":"813E4939F1567B219704FFC2AD4DF58BDE010879-53","symbol":"ZEBRA-16D_BNB","ordertype":2,"side":1,"price":"1000000","quantity":"10000","timeinforce":1}}],"signatures":[{"pub_key":{"type":"tendermint/PubKeySecp256k1","value":"AhOb3ZXecsIqwqKw+HhTscyi6K35xYpKaJx10yYwE0Qa"},"signature":"","account_number":" account-number","sequence":"10"}],"memo":"","source":"0","data":null}}\n')),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"Generate amino-encoded  transaction with ",(0,l.kt)("inlineCode",{parentName:"li"},"dry-run"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"tbnbcli dex order  --symbol ABC-16D_BNB  --side 1 --price 1000000 --qty 10000 --from account --chain-id Binance-Chain-Ganges --node=data-seed-pre-2-s1.binance.org:80 -t gte --dry --account-number account-number\n")),(0,l.kt)("p",null,"This transaction is generatedas as a signed transaction in amino encoding:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},' {"type":"auth/StdTx","value":{"msg":[{"type":"dex/NewOrder","value":{"sender":"tbnb1sylyjw032eajr9cyllp26n04300qzzre38qyv5","id":"813E4939F1567B219704FFC2AD4DF58BDE010879-53","symbol":"ZEBRA-16D_BNB","ordertype":2,"side":1,"price":"1000000","quantity":"10000","timeinforce":1}}],"signatures":[{"pub_key":{"type":"tendermint/PubKeySecp256k1","value":"AhOb3ZXecsIqwqKw+HhTscyi6K35xYpKaJx10yYwE0Qa"},"signature":"6qppgKBUp5Fwc77qc1I/U1qX4H4VSBP/fHUWaEPoQDk/visNDIGCts96271+TaflByaRV/toQTulIHOjbT9oJQ==","account_number":" <account-number>","sequence":"10"}],"memo":"","source":"0","data":null}}\n')),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},"Submit this transaction to rpc port")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'localhost:27147/broadcast_tx_async?tx=\"0xdb01f0625dee0a63ce6dc0430a14813e4939f1567b219704ffc2ad4df58bde010879122b383133453439333946313536374232313937303446464332414434444635384244453031303837392d34341a0d5a454252412d3136445f424e422002280130c0843d38904e400112700a26eb5ae9872102139bdd95de72c22ac2a2b0f87853b1cca2e8adf9c58a4a689c75d3263013441a124015e99f7a686529c76ccc2d70b404af82ca88dfee27c363439b91ea0280571b2731c03b902193d6a5793baf64b54bcdf3f85e0d7cf657e1a1077f88143a5a65f518d2e518202b\"'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n\n    // handle error\n\n}\ndefer client.Stop()\nresult, err := client.BroadcastTxAsync("db01f0625dee0a63ce6dc0430a14813e4939f1567b219704ffc2ad4df58bde010879122b383133453439333946313536374232313937303446464332414434444635384244453031303837392d34341a0d5a454252412d3136445f424e422002280130c0843d38904e400112700a26eb5ae9872102139bdd95de72c22ac2a2b0f87853b1cca2e8adf9c58a4a689c75d3263013441a124015e99f7a686529c76ccc2d70b404af82ca88dfee27c363439b91ea0280571b2731c03b902193d6a5793baf64b54bcdf3f85e0d7cf657e1a1077f88143a5a65f518d2e518202b")\n')),(0,l.kt)("p",null,"The above command returns JSON structured like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "error": "",\n    "result": {\n        "hash": "721B67C1772EA5FC7E80D70DEAA3C52034204FC60C057FF1117EE45468C1A980",\n        "log": "",\n        "data": "",\n        "code": "0"\n    },\n    "id": "",\n    "jsonrpc": "2.0"\n\n}\n')),(0,l.kt)("p",null,"Please note that the returned data contains no confirmation about whether this transaction has been committed or not. You will be able to verify the transaction status on blockchain with the following query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"tbnbcli tx 721B67C1772EA5FC7E80D70DEAA3C52034204FC60C057FF1117EE45468C1A980  --chain-id=Binance-Chain-Ganges --node=data-seed-pre-2-s1.binance.org:80\n")),(0,l.kt)("p",null,"It returns the height which it was committed:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"hash":"721B67C1772EA5FC7E80D70DEAA3C52034204FC60C057FF1117EE45468C1A980","height":"7731087","tx":{"type":"auth/StdTx","value":{"msg":[{"type":"dex/NewOrder","value":{"sender":"tbnb1sylyjw032eajr9cyllp26n04300qzzre38qyv5","id":"813E4939F1567B219704FFC2AD4DF58BDE010879-44","symbol":"ZEBRA-16D_BNB","ordertype":2,"side":1,"price":"1000000","quantity":"10000","timeinforce":1}}],"signatures":[{"pub_key":{"type":"tendermint/PubKeySecp256k1","value":"AhOb3ZXecsIqwqKw+HhTscyi6K35xYpKaJx10yYwE0Qa"},"signature":"FemfemhlKcdszC1wtASvgsqI3+4nw2NDm5HqAoBXGycxwDuQIZPWpXk7r2S1S83z+F4NfPZX4aEHf4gUOlpl9Q==","account_number":"406226","sequence":"43"}],"memo":"","source":"0","data":null}},"result":{"data":"eyJvcmRlcl9pZCI6IjgxM0U0OTM5RjE1NjdCMjE5NzA0RkZDMkFENERGNThCREUwMTA4NzktNDQifQ==","log":"Msg 0: ","tags":[{"key":"YWN0aW9u","value":"b3JkZXJOZXc="}]}}\n')),(0,l.kt)("h4",{id:"622-broadcasttxcommit"},"6.2.2 BroadcastTxCommit"),(0,l.kt)("p",null,"The transaction will be broadcasted and returns with the response from CheckTx and DeliverTx."),(0,l.kt)("p",null,"This method will wait for both CheckTx and DeliverTx, so it is the slowest way to broadcast through RPC but offers the most accurate success/failure response."),(0,l.kt)("p",null,"CONTRACT: only returns error if mempool.CheckTx() errs or if we timeout\nwaiting for tx to commit."),(0,l.kt)("p",null,"If CheckTx or DeliverTx fail, no error will be returned, but the returned result\nwill contain a non-OK ABCI code."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Transaction Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tx"),(0,l.kt)("td",{parentName:"tr",align:null},"Tx"),(0,l.kt)("td",{parentName:"tr",align:null},"nil"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"The transaction info")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return Parameters")),(0,l.kt)("p",null,"CheckTx and DeliverTx results"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"type ResultBroadcastTxCommit struct {\n    CheckTx   abci.ResponseCheckTx\n    DeliverTx abci.ResponseDeliverTx\n    Hash      cmn.HexBytes\n    Height    int64\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example of Calling REST")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Query the account number and sequence of your address")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"tbnbcli account your-address  --chain-id=Binance-Chain-Ganges --node=data-seed-pre-2-s1.binance.org:80\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Generate your transaction json and save this output to a json file")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'tbnbcli send --from name --to=to-address --amount=500000000:BNB --chain-id=Binance-Chain-Ganges --node=data-seed-pre-2-s1.binance.org:80 --json --memo "Test transfer" --generate-only\n')),(0,l.kt)("p",null,"The returned value is the transaction to be sent without signature\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},' {"type":"auth/StdTx","value":{"msg":[{"type":"dex/NewOrder","value":{"sender":"tbnb1sylyjw032eajr9cyllp26n04300qzzre38qyv5","id":"813E4939F1567B219704FFC2AD4DF58BDE010879-53","symbol":"ZEBRA-16D_BNB","ordertype":2,"side":1,"price":"1000000","quantity":"10000","timeinforce":1}}],"signatures":[{"pub_key":{"type":"tendermint/PubKeySecp256k1","value":"AhOb3ZXecsIqwqKw+HhTscyi6K35xYpKaJx10yYwE0Qa"},"signature":"","account_number":" account-number","sequence":"10"}],"memo":"","source":"0","data":null}}\n')),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"Generate amino-encoded  transaction with ",(0,l.kt)("inlineCode",{parentName:"li"},"dry-run"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"tbnbcli dex order  --symbol ABC-16D_BNB  --side 1 --price 1000000 --qty 10000 --from account --chain-id Binance-Chain-Ganges --node=data-seed-pre-2-s1.binance.org:80 -t gte --dry --account-number account-number\n")),(0,l.kt)("p",null,"This transaction is generatedas as a signed transaction in amino encoding:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},' {"type":"auth/StdTx","value":{"msg":[{"type":"dex/NewOrder","value":{"sender":"tbnb1sylyjw032eajr9cyllp26n04300qzzre38qyv5","id":"813E4939F1567B219704FFC2AD4DF58BDE010879-53","symbol":"ZEBRA-16D_BNB","ordertype":2,"side":1,"price":"1000000","quantity":"10000","timeinforce":1}}],"signatures":[{"pub_key":{"type":"tendermint/PubKeySecp256k1","value":"AhOb3ZXecsIqwqKw+HhTscyi6K35xYpKaJx10yYwE0Qa"},"signature":"6qppgKBUp5Fwc77qc1I/U1qX4H4VSBP/fHUWaEPoQDk/visNDIGCts96271+TaflByaRV/toQTulIHOjbT9oJQ==","account_number":" <account-number>","sequence":"10"}],"memo":"","source":"0","data":null}}\n')),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},"Submit this transaction")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'localhost:27147/broadcast_tx_commit?tx=\"0xdb01f0625dee0a63ce6dc0430a14813e4939f1567b219704ffc2ad4df58bde010879122b383133453439333946313536374232313937303446464332414434444635384244453031303837392d34341a0d5a454252412d3136445f424e422002280130c0843d38904e400112700a26eb5ae9872102139bdd95de72c22ac2a2b0f87853b1cca2e8adf9c58a4a689c75d3263013441a124015e99f7a686529c76ccc2d70b404af82ca88dfee27c363439b91ea0280571b2731c03b902193d6a5793baf64b54bcdf3f85e0d7cf657e1a1077f88143a5a65f518d2e518202b\"'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n\n    // handle error\n\n}\ndefer client.Stop()\nresult, err := client.BroadcastTxCommit("789")\n')),(0,l.kt)("p",null,"The above command returns JSON structured like this. Please note that the returned data contains both CheckTx and DeliverTx output."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": "",\n  "result": {\n    "check_tx": {\n      "data": "eyJvcmRlcl9pZCI6IjgxM0U0OTM5RjE1NjdCMjE5NzA0RkZDMkFENERGNThCREUwMTA4NzktNDYifQ==",\n      "log": "Msg 0: ",\n      "tags": [\n        {\n          "key": "YWN0aW9u",\n          "value": "b3JkZXJOZXc="\n        }\n      ]\n    },\n    "deliver_tx": {\n      "data": "eyJvcmRlcl9pZCI6IjgxM0U0OTM5RjE1NjdCMjE5NzA0RkZDMkFENERGNThCREUwMTA4NzktNDYifQ==",\n      "log": "Msg 0: ",\n      "tags": [\n        {\n          "key": "YWN0aW9u",\n          "value": "b3JkZXJOZXc="\n        }\n      ]\n    },\n    "hash": "008EA3C57B15E34B045F69DCEB2A5589B979B2B58BA282C15DF2AEA8B441AB6B",\n    "height": "7734637"\n  }\n}\n')),(0,l.kt)("p",null,'To understand the output data, you could decode these data information of base64 encoding: "{"order_id":"813E4939F1567B219704FFC2AD4DF58BDE010879-46"}"'),(0,l.kt)("h4",{id:"623-broadcasttxsync"},"6.2.3 BroadcastTxSync"),(0,l.kt)("p",null,"The transaction will be broadcasted and returns with the response from CheckTx."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Transaction Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tx"),(0,l.kt)("td",{parentName:"tr",align:null},"Tx"),(0,l.kt)("td",{parentName:"tr",align:null},"nil"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"The transaction info")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Return Parameters")),(0,l.kt)("p",null,"CheckTx results"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"type ResultBroadcastTx struct {\n    Code uint32\n    Data cmn.HexBytes\n    Log  string\n    Hash cmn.HexBytes\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example of Calling REST")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Query the account number and sequence of your address")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"bnbcli account your-address  --chain-id=Binance-Chain-Ganges --node=data-seed-pre-2-s1.binance.org:80\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Generate your transaction json and save this output to a json file")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'bnbcli send --from name --to=to-address --amount=500000000:BNB --chain-id=Binance-Chain-Ganges --node=data-seed-pre-2-s1.binance.org:80 --json --memo "Test transfer" --generate-only\n')),(0,l.kt)("p",null,"The returned value is the transaction to be sent without signature\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},' {"type":"auth/StdTx","value":{"msg":[{"type":"dex/NewOrder","value":{"sender":"tbnb1sylyjw032eajr9cyllp26n04300qzzre38qyv5","id":"813E4939F1567B219704FFC2AD4DF58BDE010879-53","symbol":"ZEBRA-16D_BNB","ordertype":2,"side":1,"price":"1000000","quantity":"10000","timeinforce":1}}],"signatures":[{"pub_key":{"type":"tendermint/PubKeySecp256k1","value":"AhOb3ZXecsIqwqKw+HhTscyi6K35xYpKaJx10yYwE0Qa"},"signature":"","account_number":" account-number","sequence":"10"}],"memo":"","source":"0","data":null}}\n')),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"Generate amino-encoded  transaction with ",(0,l.kt)("inlineCode",{parentName:"li"},"dry-run"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"bnbcli dex order  --symbol ABC-16D_BNB  --side 1 --price 1000000 --qty 10000 --from account --chain-id Binance-Chain-Ganges --node=data-seed-pre-2-s1.binance.org:80 -t gte --dry --account-number account-number\n")),(0,l.kt)("p",null,"This transaction is generatedas as a signed transaction in amino encoding:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},' {"type":"auth/StdTx","value":{"msg":[{"type":"dex/NewOrder","value":{"sender":"tbnb1sylyjw032eajr9cyllp26n04300qzzre38qyv5","id":"813E4939F1567B219704FFC2AD4DF58BDE010879-53","symbol":"ZEBRA-16D_BNB","ordertype":2,"side":1,"price":"1000000","quantity":"10000","timeinforce":1}}],"signatures":[{"pub_key":{"type":"tendermint/PubKeySecp256k1","value":"AhOb3ZXecsIqwqKw+HhTscyi6K35xYpKaJx10yYwE0Qa"},"signature":"6qppgKBUp5Fwc77qc1I/U1qX4H4VSBP/fHUWaEPoQDk/visNDIGCts96271+TaflByaRV/toQTulIHOjbT9oJQ==","account_number":" <account-number>","sequence":"10"}],"memo":"","source":"0","data":null}}\n')),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},"Submit this transaction")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'localhost:27147/broadcast_tx_sync?tx=\"0xdb01f0625dee0a63ce6dc0430a14813e4939f1567b219704ffc2ad4df58bde010879122b383133453439333946313536374232313937303446464332414434444635384244453031303837392d34381a0d5a454252412d3136445f424e422002280130c0843d38904e400112700a26eb5ae9872102139bdd95de72c22ac2a2b0f87853b1cca2e8adf9c58a4a689c75d3263013441a12406032dd568bac76ef8231fdf928f663ab6893124465528cc8ac5232afdceceea41640227501847c95dc5307f9bbcd01c82b33093c0eb11af8aef9c70eeb554f9318d2e518202f\"'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n\n    // handle error\n\n}\ndefer client.Stop()\nresult, err := client.BroadcastTxSync("db01f0625dee0a63ce6dc0430a14813e4939f1567b219704ffc2ad4df58bde010879122b383133453439333946313536374232313937303446464332414434444635384244453031303837392d34381a0d5a454252412d3136445f424e422002280130c0843d38904e400112700a26eb5ae9872102139bdd95de72c22ac2a2b0f87853b1cca2e8adf9c58a4a689c75d3263013441a12406032dd568bac76ef8231fdf928f663ab6893124465528cc8ac5232afdceceea41640227501847c95dc5307f9bbcd01c82b33093c0eb11af8aef9c70eeb554f9318d2e518202f")\n')),(0,l.kt)("p",null,"The above command returns JSON structured like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": "",\n  "result": {\n    "code": 0,\n    "data": "7B226F726465725F6964223A22383133453439333946313536374232313937303446464332414434444635384244453031303837392D3438227D",\n    "log": "Msg 0: ",\n    "hash": "920EA6B3EE38AC9B700AB436DABCA8F3D97F06EA63CBCACA7AD22B2E5CA1DF75"\n  }\n}\n')),(0,l.kt)("p",null,'To understand the output data, you could decode these data information of hex.: "{"order_id":"813E4939F1567B219704FFC2AD4DF58BDE010879-48"}"'),(0,l.kt)("h3",{id:"63-websocket-apis"},"6.3 Websocket APIs"),(0,l.kt)("h4",{id:"631-subscribe"},"6.3.1 Subscribe"),(0,l.kt)("p",null,"Subscribe for events via WebSocket."),(0,l.kt)("p",null,'To tell which events you want, you need to provide a query. query is a\nstring, which has a form: "condition AND condition ..." (no OR at the\nmoment). condition has a form: "key operation operand". key is a string with\na restricted set of possible symbols ( \\t\\n\\r',"\\",'()"\'=>< are not allowed).\noperation can be "=", "<", "<=", ">", ">=", "CONTAINS". operand can be a\nstring (escaped with single quotes), number, date or time.\n',(0,l.kt)("strong",{parentName:"p"},"Query Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"query"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},'""'),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"Query")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"    tm.event = 'NewBlock'                               # new blocks\n    tm.event = 'CompleteProposal'               # node got a complete proposal\n    tm.event = 'Tx' AND tx.hash = 'XYZ' # single transaction\n    tm.event = 'Tx' AND tx.height = 5       # all txs of the fifth block\n    tx.height = 5                                               # all txs of the fifth block\n")),(0,l.kt)("p",null,"Tendermint provides a few predefined keys: tm.event, tx.hash and tx.height.\nNote for transactions, you can define additional keys by providing tags with\nDeliverTx response."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"        DeliverTx{\n            Tags: []*KVPair{\n                \"agent.name\": \"K\",\n            }\n      }\n\n        tm.event = 'Tx' AND agent.name = 'K'\n        tm.event = 'Tx' AND account.created_at >= TIME 2013-05-03T14:45:00Z\n        tm.event = 'Tx' AND contract.sign_date = DATE 2017-01-01\n        tm.event = 'Tx' AND account.owner CONTAINS 'Igor'\n")),(0,l.kt)("p",null,"See list of all possible events here"),(0,l.kt)("a",{href:"https://godoc.org/github.com/tendermint/tendermint/types#pkg-constants"},"https://godoc.org/github.com/tendermint/tendermint/types#pkg-constants"),(0,l.kt)("p",null,"For complete query syntax, check out"),(0,l.kt)("a",{href:"https://godoc.org/github.com/tendermint/tendermint/libs/pubsub/query"},"https://godoc.org/github.com/tendermint/tendermint/libs/pubsub/query"),".",(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/tendermint/tendermint/libs/pubsub/query"\nimport "github.com/tendermint/tendermint/types"\n\nclient := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n    // handle error\n\n}\ndefer client.Stop()\nctx, cancel := context.WithTimeout(context.Background(), timeout)\ndefer cancel()\nquery := query.MustParse("tm.event = \'Tx\' AND tx.height = 3")\ntxs := make(chan interface{})\nerr = client.Subscribe(ctx, "test-client", query, txs)\n\ngo func() {\n\n\n      for e := range txs {\n        fmt.Println("got ", e.(types.EventDataTx))\n         }\n\n}()\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The above command returns JSON structured like this:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n\n\n    "error": "",\n    "result": {},\n    "id": "",\n    "jsonrpc": "2.0"\n\n}\n')),(0,l.kt)("h4",{id:"632-unsubscribe"},"6.3.2 Unsubscribe"),(0,l.kt)("p",null,"Unsubscribe from events via WebSocket."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"query"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},'""'),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"Query")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n    // handle error\n}\ndefer client.Stop()\nerr = client.Unsubscribe("test-client", query)\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The above command returns JSON structured like this:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "error": "",\n    "result": {},\n    "id": "",\n    "jsonrpc": "2.0"\n}\n')),(0,l.kt)("h4",{id:"633-unsubscribeall"},"6.3.3 UnsubscribeAll"),(0,l.kt)("p",null,"Unsubscribe from all events via WebSocket."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'client := client.NewHTTP("tcp://0.0.0.0:27147", "/websocket")\nerr := client.Start()\nif err != nil {\n\n\n    // handle error\n\n}\ndefer client.Stop()\nerr = client.UnsubscribeAll("test-client")\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The above command returns JSON structured like this:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "error": "",\n    "result": {},\n    "id": "",\n    "jsonrpc": "2.0"\n}\n')))}d.isMDXComponent=!0}}]);